<?php
/*
 * Author : Neil
 */
function termdisplay_menu() {
  $items = array();
  $items['group/%'] = array(
      'page callback' => 'termdisplay_show',
      'page arguments' => array(1),
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK,
  );
  $items['mpper/%'] = array(
      'page callback' => 'term_parent',
      'page arguments' => array(1),
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK,
  );
  return $items;
}

function termdisplay_show($vid) {
  $terms = _taxonomy_get_real_tree($vid);
  $output = theme('term_parent', $terms);
  return $output;
}

function term_parent($tid) {
  $children = taxonomy_get_children($tid);
  $output = theme('term_parent', $children);
  return $output;
}

function termdisplay_theme() {
  return array(
      'term_parent' => array(
          'arguments' => array('terms' => array()),
          'template' => 'term-parent',
      ),
  );
}

function termdisplay_form_alter(&$form, $form_state, $form_id) {
  $args = arg();
  $tid = $args[5];
  $status = taxonomy_get_term($tid)->status;
  if ($form_id == 'taxonomy_form_term') {
    $form['identification']['status'] = array(
        '#type' => 'select',
        '#title' => t('Display'),
        '#default_value' => $status,
        '#options' => array(
            '1' => 'Show',
            '0' => 'Hide',
        ),
        '#description' => t('This term display?'),
    );
    $form['#submit'][] = 'termdisplay_form_submit';
  }
}

function termdisplay_form_submit($form, &$form_state) {
  term_data_set('status', $form_state['values']['status'], $form['#term']['tid']);
}

function term_data_set($field, $value, $id) {
  db_query("UPDATE {term_data} SET %s = '%s' WHERE tid = %d", $field, $value, $id);
}

function get_parent_node_count($tid, $vid=0, $node_count=0) {
  $children = taxonomy_get_children($tid, $vid);
  if (!empty($children)) {
    foreach ($children as $term) {
      $children = taxonomy_get_children($term->tid, $vid);
      if (!empty($children)) {
        $node_count += get_parent_node_count($term->tid, $vid, $node_count);
      } else {
        $node_count += get_taxonomy_node_conut($term->tid);
      }
    }
  } else {
    $node_count += get_taxonomy_node_conut($tid);
  }
  return $node_count;
}

function get_taxonomy_node_conut($tid) {
  $sql = "SELECT COUNT(*) AS len FROM node n INNER JOIN term_node tn ON tn.nid = n.nid WHERE tn.tid = %d";
  $result = db_result(db_query($sql, $tid));
  return $result;
}

function _taxonomy_get_real_tree($vid) {
  $result_tree = array();
  $terms = array();
  foreach (taxonomy_get_tree($vid) as $term) {
    if (isset($terms[$term->tid])) {
      $term->children = $terms[$term->tid]->children;
      $terms[$term->tid] = $term;
    } else {
      $terms[$term->tid] = $term;
    }

    if ($term->depth === 0) {
      $result_tree[$term->tid] = &$terms[$term->tid];
      continue;
    }

    foreach ($term->parents as $tid) {
      if ($tid) {
        if (!isset($terms[$tid])) {
          $terms[$tid] = new stdClass();
        }
        $terms[$tid]->children[$term->tid] = &$terms[$term->tid];
      }
    }
  }
  return $result_tree;
}