<?php

/**
 * @file
 * For hardware catalog module installation used.
 */

/**
 * Implementation of hook_install().
 */
function covidien_hw_install() {
  $files = file_scan_directory(drupal_get_path('module', 'covidien_hw') . '/content_type', '.cck_import.inc');
  foreach ($files as $absolute => $file) {
    $form_state = array();
    $form_state['values']['type_name'] = '<create>';
    $fh = fopen($file->filename, 'r');
    $thedata = fread($fh, filesize($file->filename));
    fclose($fh);
    $form_state['values']['macro'] = "$thedata";
    drupal_execute('content_copy_import_form', $form_state);
  }
}

// Uninstall Instruction
function covidien_hw_uninstall() {
  
}

/**
 * Implements hook_update.
 */
function covidien_hw_update_6001() {
  module_load_include('php', 'covidien_ui', 'includes/content_copy_import_update');
  $ret = array();
  // List of new content types to import.
  $import_new = array();
  //Example 'contenttype.cck_import'
  // List of content types to update.
  $import_updatearr = array(
    'hardware.cck_import' => 'hardware',
  );
  // For delete action update the update action array also.
  $import_deletearr = array();
  //Example 'contenttype.cck_import'=>array('field_one'),
  $arg = array(
    'module_name' => 'covidien_hw',
    'import_new' => $import_new,
    'import_updatearr' => $import_updatearr,
    'import_deletearr' => $import_deletearr,
  );
  covidien_contenttype_update($arg);
  return $ret;
}

/**
 * Implements hook_update.
 */
function covidien_hw_update_6002() {
  module_load_include('php', 'covidien_ui', 'includes/content_copy_import_update');
  $ret = array();
  // List of new content types to import.
  $import_new = array();
  //Example 'contenttype.cck_import'
  // List of content types to update.
  $import_updatearr = array(
    'hardware.cck_import' => 'hardware',
  );
  // For delete action update the update action array also.
  $import_deletearr = array();
  //Example 'contenttype.cck_import' => array('field_one'),
  $arg = array(
    'module_name' => 'covidien_hw',
    'import_new' => $import_new,
    'import_updatearr' => $import_updatearr,
    'import_deletearr' => $import_deletearr,
  );
  covidien_contenttype_update($arg);
  return $ret;
}

/**
 * Implements hook_update
 * April 2013
 */
function covidien_hw_update_6003() {
  module_load_include('php', 'covidien_ui', 'includes/content_copy_import_update');
  $ret = array();
  // List of new content types to import.
  //$import_new = array('sample.cck_import');
  $import_new = array();
  //Example 'contenttype.cck_import'
  // List of content types to update.
  $import_updatearr = array(
    'hardware.cck_import' => 'hardware',
  );
  // For delete action update the update action array also.If the content type not deleted
  // @info: If content type deleted follow the below process
  $import_deletearr = array();
  $import_ctdeletearr = array();
  //todo:filed table creation to avoid
  //Example 'contenttype.cck_import' => array('field_one'),
  $arg = array(
    'module_name' => 'covidien_hw',
    'import_new' => $import_new,
    'import_updatearr' => $import_updatearr,
    'import_deletearr' => $import_deletearr,
    'import_ctdeletearr' => $import_ctdeletearr,
  );
  covidien_contenttype_update($arg);
  return $ret;
}

/** V3.0 * */
function covidien_hw_update_6101() {
  $ret = array();
  $hw_serial_number = array('type' => 'varchar', 'length' => 50, 'description' => 'Device Serial Number');
  //status in Obsolete, In production
  $hw_status = array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0, 'description' => 'Hardware Status');

  db_add_field($ret, 'content_type_hardware', 'device_serial_number', $hw_serial_number);
  db_add_field($ret, 'content_type_hardware', 'hw_status', $hw_status);

  return $ret;
}

function covidien_hw_update_6102() {
  //create type hardwarestatus
  _covidien_hw_install_type_create();
  //add hardwarestatus to node
  $data = array(
    'hardwarestatus' => array('Obsolete', 'In Production', 'Unknown'),
    'softwarestatus' => array('Unknown'),
  );

  foreach ($data as $type => $value) {
    foreach ($value as $val) {
      $node = node_load(array('title' => $val, 'type' => $type));
      if ($node) {
        continue;
      } else {
        $node = new stdClass();
      }
      $node->type = $type;
      $node->uid = 1;
      $node->format = 0;
      $node->title = $val;
      node_save($node);
    }
  }
  //update all hardware status to In Production
  _update_all_hardware_to_in_production();
  return array(array('success' => true, 'query' => 'Add hardware software firmware status'));
}

function _covidien_hw_install_type_create() {
  // Create an additional node type
  $hw_status_node_type = array(
    'type' => 'hardwarestatus',
    'name' => t('Hardware Status'),
    'module' => 'node',
    'description' => t('A hardware has one status'),
    'custom' => TRUE,
    'modified' => TRUE,
    'locked' => FALSE,
    'has_title' => TRUE,
    'has_body' => FALSE,
  );
  $hw_status_node_type = (object) _node_type_set_defaults($hw_status_node_type);
  node_type_save($hw_status_node_type);
}

function _update_all_hardware_to_in_production() {
  $in_production_nid = db_result(db_query("SELECT nid FROM {node} WHERE type='hardwarestatus' AND title='%s'", 'In Production'));
  db_query("UPDATE {content_type_hardware} SET hw_status=%d", $in_production_nid);
}

function covidien_hw_update_6103() {
  $view_hardware = "CREATE OR REPLACE VIEW `view_hardware` AS (
select  `a`.`nid` AS `id`,  `b`.`title` AS `NAME`,  `a`.`field_hw_part_value` AS `part`,  `a`.`field_hw_version_value` AS `VERSION`,  `a`.`field_hw_description_value` AS `description`,  `a`.`field_hw_type_nid` AS `hw_type_id` from (`content_type_hardware` `a`  join `node` `b`) where (`a`.`vid` = `b`.`vid`));";

  db_query($view_hardware);
  return array(array('success' => true, 'query' => 'Create view_hardware'));
}

function covidien_hw_update_6104() {
  $view_hardware = "CREATE OR REPLACE VIEW `view_hardware` AS (
select  `a`.`nid` AS `nid`, `a`.`vid` AS `vid`, `b`.`title` AS `NAME`,  `a`.`field_hw_part_value` AS `part`,  `a`.`field_hw_version_value` AS `VERSION`,  `a`.`field_hw_description_value` AS `description`, `c`.`title` AS `status`, `a`.`field_hw_type_nid` AS `hw_type_id` from `content_type_hardware` `a`  join `node` `b` on `a`.`vid` = `b`.`vid` join `node` `c` on `a`.`hw_status` = `c`.`nid`);";

  db_query($view_hardware);
  return array(array('success' => true, 'query' => 'Add status to view_hardware'));
}

function covidien_hw_update_6105() {
  //Add hardware status Archived
  $archived_id = db_result(db_query("SELECT nid FROM {node} WHERE title='Archived' AND type='hardwarestatus'"));
  if (!$archived_id) {
    $node = new stdClass();
    $node->type = 'hardwarestatus';
    $node->uid = 1;
    $node->format = 0;
    $node->title = 'Archived';
    node_save($node);
  }
  $limited_id = db_result(db_query("SELECT nid FROM {node} WHERE title='Limited Release' AND type='hardwarestatus'"));
  //Add hardware status Limited Release
  if (!$limited_id) {
    $node = new stdClass();
    $node->type = 'hardwarestatus';
    $node->uid = 1;
    $node->format = 0;
    $node->title = 'Limited Release';
    node_save($node);
  }
  //update hardware status can edit on node 
  db_query("UPDATE {node_type} SET module = 'node' WHERE TYPE='hardwarestatus'");
  return array(array('success' => true, 'query' => 'Add hardware status Archived, Limited Release'));
}

function covidien_hw_update_6106() {
  $result = db_query("SELECT h.nid FROM {content_type_hardware} h 
    LEFT JOIN {node} sn ON h.hw_status=sn.nid
    WHERE sn.type='hardwarestatus' AND (sn.title='Obsolete' OR sn.title IS NULL OR sn.title='')");
  $rows = array();
  while ($row = db_fetch_object($result)) {
    $rows[$row->nid] = $row->nid;
  }
  //update old Obsolete to Archived
  if (count($rows)) {
    $status_id = db_result(db_query("SELECT nid FROM {node} WHERE title='Archived' AND type='hardwarestatus'"));
    db_query("UPDATE {content_type_hardware} SET hw_status=%d WHERE nid IN (" . db_placeholders($rows) . ")", array_merge(array($status_id), $rows));
  }
  //delete Obsolete
  $nid = db_result(db_query("SELECT nid FROM {node} WHERE title='Obsolete' AND type='hardwarestatus'"));
  node_delete($nid);
  return array(array('success' => true, 'query' => 'Remove hardware status Obsolete'));
}

function covidien_hw_update_6107() {
  //delete duplicate hardware status
  $result = db_query("SELECT nid, title FROM {node} WHERE type='hardwarestatus'");
  $rows = array();
  while ($row = db_fetch_object($result)) {
    $rows[$row->nid] = $row->title;
  }
  $unique_arr = array_unique($rows);
  $repeat_arr = array_diff_assoc($rows, $unique_arr);
  foreach ($repeat_arr as $nid => $title) {
    node_delete($nid);
  }
  //delete duplicate named configuration
  $named_result = db_query("SELECT id, name FROM {named_configuration_status}");
  $named_rows = array();
  while ($named_row = db_fetch_object($named_result)) {
    $named_rows[$named_row->id] = $named_row->name;
  }
  $unique_named = array_unique($named_rows);
  $repeat_named = array_diff_assoc($named_rows, $unique_named);
  foreach ($repeat_named as $id => $name) {
    db_query("DELETE FROM {named_configuration_status} WHERE id=%d", $id);
  }
  return array(array('success' => true, 'query' => 'Delete duplicate hardware status'));
}

function covidien_hw_update_6108() {
  db_query("CREATE TABLE `device_hardware_serial_number` (
    `device_nid` int(10) NOT NULL,
    `hardware_nid` int(10) NOT NULL,
    `serial_number` varchar(45) NOT NULL,
    `created` int(11) DEFAULT NULL,
    KEY `dhsn_device_hardware_idx` (`device_nid`,`hardware_nid`),
    KEY `dhsn_device_idx` (`device_nid`)
  ) ENGINE=InnoDB DEFAULT CHARSET=utf8");
  return array(array('success' => true, 'create' => 'Create table device_hardware_serial_number'));
}

//GATEWAY-2532 Delete status 'Limited Release', 'Archived'
function covidien_hw_update_6109() {
  $status = array('Limited Release', 'Archived');
  $result = db_query("SELECT nid FROM {node} WHERE type='hardwarestatus' AND title IN (" . db_placeholders($status, 'varchar') . ")", $status);
  $rows = array(0);
  while ($row = db_fetch_object($result)) {
    $rows[$row->nid] = $row->nid;
  }
  //Update old 'Limited Release', 'Archived' to 'Unknown'
  $unknown_nid = db_result(db_query("SELECT nid FROM {node} WHERE type='hardwarestatus' AND title='%s'", 'Unknown'));
  db_query("UPDATE content_type_hardware SET hw_status=%d WHERE hw_status IN (" . db_placeholders($rows, 'int') . ")", array_merge(array($unknown_nid), $rows));
  //delete status 'Limited Release', 'Archived'
  foreach ($rows as $nid) {
    node_delete($nid);
  }
  return array(array('success' => true, 'query' => 'Delete hardware status Limited Release, Archived'));
}

//Update no status to In Production 
function covidien_hw_update_6110() {
  $sql = "SELECT h.nid FROM {content_type_hardware} h LEFT JOIN {node} sn ON h.hw_status = sn.nid WHERE sn.nid IS NULL";
  $result = db_query($sql);
  $rows = array(0);
  while ($row = db_fetch_object($result)) {
    $rows[$row->nid] = $row->nid;
  }
  $in_prod_nid = db_result(db_query("SELECT nid FROM {node} WHERE type='hardwarestatus' AND title='%s'", 'In Production'));
  db_query("UPDATE {content_type_hardware} SET hw_status=%d WHERE nid IN (" . db_placeholders($rows, 'int') . ")", array_merge(array($in_prod_nid), $rows));
  return array(array('success' => true, 'query' => 'Update hardware have not status to In Production'));
}

//GATEWAY-2601 add status 'Limited Release', 'Archived'
function covidien_hw_update_6111() {
  //add status 'Limited Release', 'Archived'
  return covidien_hw_update_6105();
}
