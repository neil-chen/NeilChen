<?php

/**
 * hook_install
 */
function covidien_alert_install() {
  covidien_alert_update_6000();
  covidien_alert_update_6010();
  covidien_alert_update_6011();
  covidien_alert_update_6012();
  covidien_alert_update_6013();
  covidien_alert_update_6014();
  covidien_alert_update_6015();
  covidien_alert_update_6016();
  covidien_alert_update_6017();
  covidien_alert_update_6018();
  covidien_alert_update_6019();
  covidien_alert_update_6020();
  covidien_alert_update_6021();
  covidien_alert_update_6022();
  covidien_alert_update_6023();
  covidien_alert_update_6024();
  covidien_alert_update_6025();
}

/**
 * hook_install
 */
function covidien_alert_uninstall() {
  
}

/**
 * hook_update_x
 */
function covidien_alert_update_6000() {
  covidien_alert_create_table();
}

/**
 * create all alert table
 */
function covidien_alert_create_table() {
  //cancel foreign key checks
  db_query("SET FOREIGN_KEY_CHECKS=0");

  //alert_state
  db_query("DROP TABLE IF EXISTS alert_state");
  db_query("CREATE TABLE IF NOT EXISTS alert_state (
    id INT(11) NOT NULL AUTO_INCREMENT,
    name VARCHAR(50) NOT NULL,
    PRIMARY KEY (id),
    UNIQUE INDEX notification_status_name_UNIQUE (name ASC))
    ENGINE = InnoDB
    COMMENT = 'Pending\nSent\nDuplicate \nSuppressed \nAcknowledged\nResolved\nCl /* comment truncated */ /*osed*/'");
  db_query("INSERT INTO alert_state(name) values('Pending')");
  db_query("INSERT INTO alert_state(name) values('Sent')");
  db_query("INSERT INTO alert_state(name) values('Duplicate')");
  db_query("INSERT INTO alert_state(name) values('Suppresses')");
  db_query("INSERT INTO alert_state(name) values('Acknowledged')");
  db_query("INSERT INTO alert_state(name) values('Resolved')");
  db_query("INSERT INTO alert_state(name) values('Closed')");
  //alert_state_transition
  db_query("DROP TABLE IF EXISTS alert_state_transition");
  db_query("CREATE TABLE IF NOT EXISTS alert_state_transition (
    from_alert_state_id INT(11) NOT NULL,
    to_alert_state_id INT(11) NOT NULL,
    INDEX alert_state_transition_alert_state_fk1_idx (from_alert_state_id ASC),
    INDEX alert_state_transition_alert_state_fk2_idx (to_alert_state_id ASC),
    CONSTRAINT alert_state_transition_alert_state_fk1
      FOREIGN KEY (from_alert_state_id)
      REFERENCES alert_state (id)
      ON DELETE RESTRICT
      ON UPDATE CASCADE,
    CONSTRAINT alert_state_transition_alert_state_fk2
      FOREIGN KEY (to_alert_state_id)
      REFERENCES alert_state (id)
      ON DELETE RESTRICT
      ON UPDATE CASCADE)
    ENGINE = InnoDB");
  //alert_category
  db_query("DROP TABLE IF EXISTS alert_category");
  db_query("CREATE TABLE IF NOT EXISTS alert_category (
    id INT(11) NOT NULL AUTO_INCREMENT,
    name VARCHAR(50) NOT NULL,
    PRIMARY KEY (id))
    ENGINE = InnoDB
    COMMENT = '- Notification\n- Business (alert)\n- Technical '");
  db_query("INSERT INTO alert_category (name) VALUES ('Information')");
  db_query("INSERT INTO alert_category (name) VALUES ('Business')");
  db_query("INSERT INTO alert_category (name) VALUES ('Technic')");
  //alert_event
  db_query("DROP TABLE IF EXISTS alert_event");
  db_query("CREATE TABLE IF NOT EXISTS alert_event (
    id INT(11) NOT NULL AUTO_INCREMENT,
    name VARCHAR(50) NOT NULL,
    description VARCHAR(500) NULL,
    category_id INT(11) NOT NULL,
    alert_event_external_ref VARCHAR(10) NULL,
    PRIMARY KEY (id),
    INDEX fk_alert_event_category_idx (category_id ASC),
    UNIQUE INDEX alert_event_external_ref_UNIQUE (alert_event_external_ref ASC),
    UNIQUE INDEX name_UNIQUE (name ASC),
    CONSTRAINT fk_alert_event_category
      FOREIGN KEY (category_id)
      REFERENCES alert_category (id)
      ON DELETE RESTRICT
      ON UPDATE CASCADE)
    ENGINE = InnoDB");
  db_query("INSERT INTO alert_event (name,description,category_id) values('Device Configuration Change', 'A device\'s configuration has changed (discrepancy report)', (select id from alert_category where name='Business'))");
  db_query("INSERT INTO alert_event (name,description,category_id) values('Invalid Device Configuration', 'Invalid Configuration Alert - An invalid device configuration was detected', (select id from alert_category where name='Business'))");
  db_query("INSERT INTO alert_event (name,description,category_id) values('Software Upgrade Failed', 'Upgrade Failed Alert - A software upgrade package has failed or installation was incomplete', (select id from alert_category where name='Business'))");
  db_query("INSERT INTO alert_event (name,description,category_id) values('Serial Number Change', 'Serial Number changed (realigned).', (select id from alert_category where name='Business'))");
  db_query("INSERT INTO alert_event (name,description,category_id) values('Feature Enablement', 'Feature enablement', (select id from alert_category where name='Business'))");
  db_query("INSERT INTO alert_event (name,description,category_id) values('Non-Covidien User Upgrade', 'When a non-Covidien user attempts to upgrade SW on a device which is assigned to an account number which is not the user\'s account number (RMS only)', (select id from alert_category where name='Business'))");
  db_query("INSERT INTO alert_event (name,description,category_id) values('User Upgrade With Permission Denied', 'A user attempts to upgrade device software with out upgrade privileges.', (select id from alert_category where name='Business'))");
  db_query("INSERT INTO alert_event (name,description,category_id) values('Change Password', 'Change Password', (select id from alert_category where name='Information'))");
  db_query("INSERT INTO alert_event (name,description,category_id) values('Country code violation', 'Country code violation', (select id from alert_category where name='Information'))");
  db_query("INSERT INTO alert_event (name,description,category_id) values('Device software update', 'Device software update', (select id from alert_category where name='Information'))");
  db_query("INSERT INTO alert_event (name,description,category_id) values('New device registration', 'New device registration', (select id from alert_category where name='Information'))");
  db_query("INSERT INTO alert_event (name,description,category_id) values('General system level errors', 'General system level errors', (select id from alert_category where name='Technic'))");
  db_query("INSERT INTO alert_event (name,description,category_id) values('System upgrade', 'System upgrade', (select id from alert_category where name='Technic'))");
  //device_type_alert_event_relation
  db_query("DROP TABLE IF EXISTS device_type_alert_event_relation");
  db_query("CREATE TABLE IF NOT EXISTS device_type_alert_event_relation (
    id INT(11) NOT NULL AUTO_INCREMENT,
    alert_event_id INT(11) NOT NULL,
    enable_flag ENUM('Y','N') NOT NULL,
    device_type_nid INT(11) NOT NULL,
    PRIMARY KEY (id),
    INDEX alert_event_relation_alert_event_fk1_idx (alert_event_id ASC),
    INDEX alert_event_relation_device_type_fk1_idx (device_type_nid ASC),
    CONSTRAINT alert_event_relation_alert_event_fk1
      FOREIGN KEY (alert_event_id)
      REFERENCES alert_event (id)
      ON DELETE RESTRICT
      ON UPDATE CASCADE)
    ENGINE = InnoDB");
  //alert_transport_type
  db_query("DROP TABLE IF EXISTS alert_transport_type");
  db_query("CREATE TABLE IF NOT EXISTS alert_transport_type (
    id INT(11) NOT NULL AUTO_INCREMENT,
    name VARCHAR(50) NOT NULL,
    description VARCHAR(200) NULL,
    PRIMARY KEY (id),
    UNIQUE INDEX notification_transport_type_name_UNIQUE (name ASC))
    ENGINE = InnoDB");
  db_query("INSERT INTO alert_transport_type (name,description) values('Email', 'Send notification by email')");
  //alert
  db_query("DROP TABLE IF EXISTS alert");
  db_query("CREATE TABLE IF NOT EXISTS alert (
    id INT(11) NOT NULL AUTO_INCREMENT,
    device_type_nid INT(11) NOT NULL,
    create_datetime DATETIME NOT NULL,
    alert_state_id INT(11) NOT NULL,
    alert_event_id INT(11) NOT NULL,
    device_nid INT(11) NOT NULL,
    reason VARCHAR(200) NULL,
    PRIMARY KEY (id),
    INDEX fk_alert_alert_state_idx (alert_state_id ASC),
    INDEX fk_alert_alert_event_idx (alert_event_id ASC),
    INDEX fk_alert_device_idx (device_nid ASC),
    CONSTRAINT fk_alert_alert_state
      FOREIGN KEY (alert_state_id)
      REFERENCES alert_state (id)
      ON DELETE RESTRICT
      ON UPDATE CASCADE,
    CONSTRAINT fk_alert_alert_event_type
      FOREIGN KEY (alert_event_id)
      REFERENCES alert_event (id)
      ON DELETE RESTRICT
      ON UPDATE CASCADE)
    ENGINE = InnoDB");
  //alert_comment
  db_query("DROP TABLE IF EXISTS alert_comment");
  db_query("CREATE TABLE IF NOT EXISTS alert_comment (
    id INT(11) NOT NULL AUTO_INCREMENT,
    comment VARCHAR(512) NULL,
    create_time INT(11) NOT NULL,
    last_change_time DATETIME NOT NULL,
    person_nid INT NOT NULL,
    alert_id INT(11) NOT NULL,
    PRIMARY KEY (id),
    INDEX alert_comment_person_fk1_idx (person_nid ASC),
    INDEX alert_comment_alert_fk1_idx (alert_id ASC),
    CONSTRAINT alert_comment_alert_fk1
      FOREIGN KEY (alert_id)
      REFERENCES alert (id)
      ON DELETE RESTRICT
      ON UPDATE CASCADE)
    ENGINE = InnoDB");
  //alert_state_history
  db_query("DROP TABLE IF EXISTS alert_state_history");
  db_query("CREATE TABLE IF NOT EXISTS alert_state_history (
    id INT(11) NOT NULL AUTO_INCREMENT,
    create_datetime DATETIME NOT NULL,
    alert_id INT(11) NOT NULL,
    alert_state_id INT(11) NOT NULL,
    person_nid INT NOT NULL,
    PRIMARY KEY (id),
    INDEX alert_state_history_alert_fk1_idx (alert_id ASC),
    INDEX alert_state_history_alert_state_fk1_idx (alert_state_id ASC),
    INDEX alert_state_history_person_fk1_idx (person_nid ASC),
    CONSTRAINT alert_state_history_alert_fk1
      FOREIGN KEY (alert_id)
      REFERENCES alert (id)
      ON DELETE RESTRICT
      ON UPDATE CASCADE,
    CONSTRAINT alert_state_history_alert_state_fk1
      FOREIGN KEY (alert_state_id)
      REFERENCES alert_state (id)
      ON DELETE RESTRICT
      ON UPDATE CASCADE)
    ENGINE = InnoDB");
  //person_alert_subscription
  db_query("DROP TABLE IF EXISTS person_alert_event_subscription");
  db_query("CREATE TABLE IF NOT EXISTS `covidiendb`.`person_alert_event_subscription` (
	  `id` INT(10) NOT NULL AUTO_INCREMENT,
	  `device_type_nid` INT(10) NOT NULL,
	  `person_nid` INT(10) NOT NULL,
	  `active_flag` ENUM('Y','N') NOT NULL,
	  `device_scope` ENUM('A','M') NOT NULL COMMENT 'If this value is \'Y\' then person gets all possible alerts based on their application role assignment.\nIf this value is \'M\' then person gets all alerts based on the device belongs to himself.',
	  `device_type_alert_event_relation_id` INT(10) NOT NULL,
	  INDEX `person_alert_subscription_device_typ_fk1_idx` (`device_type_nid` ASC),
	  PRIMARY KEY (`id`),
	  INDEX `person_alert_subscription_person_fk1_idx` (`person_nid` ASC),
	  INDEX `person_alert_device_type_alert_event_relation_fk1_idx` (`device_type_alert_event_relation_id` ASC),
	  CONSTRAINT `person_alert_device_type_alert_event_relation_fk1`
	    FOREIGN KEY (`device_type_alert_event_relation_id`)
	    REFERENCES `covidiendb`.`device_type_alert_event_relation` (`id`)
	    ON DELETE RESTRICT
	    ON UPDATE CASCADE)
	ENGINE = InnoDB");
  //person_alert_country
  db_query("DROP TABLE IF EXISTS person_alert_country");
  db_query("CREATE TABLE IF NOT EXISTS `covidiendb`.`person_alert_country` (
	  `id` INT(10) NOT NULL AUTO_INCREMENT,
	  `country_nid` INT(10) NOT NULL,
	  `person_nid` INT(10) NOT NULL,
	  `device_type_nid` INT(10) NOT NULL,
	  `alert_category_id` INT(10) NOT NULL,
	  PRIMARY KEY (`id`),
	  INDEX `person_alert_country_country_fk1_idx` (`country_nid` ASC),
	  INDEX `person_alert_country_person_fk1_idx` (`person_nid` ASC),
	  INDEX `person_alert_country_device_type_fk1_idx` (`device_type_nid` ASC),
	  INDEX `person_alert_country_alert_category_fk1_idx` (`alert_category_id` ASC),
	  CONSTRAINT `person_alert_country_alert_category_fk1`
	    FOREIGN KEY (`alert_category_id`)
	    REFERENCES `covidiendb`.`alert_category` (`id`)
	    ON DELETE RESTRICT
	    ON UPDATE CASCADE)
	ENGINE = InnoDB");
  //person_alert_transport
  db_query("DROP TABLE IF EXISTS person_alert_transport");
  db_query("CREATE TABLE IF NOT EXISTS `covidiendb`.`person_alert_transport` (
	  `id` INT(10) NOT NULL AUTO_INCREMENT,
	  `device_type_nid` INT(10) NOT NULL,
	  `alert_category_id` INT(10) NOT NULL,
	  `alert_transport_type_id` INT(10) NOT NULL,
	  `person_nid` INT(10) NOT NULL,
	  PRIMARY KEY (`id`),
	  INDEX `person_alert_delivery_device_type_fk1_idx` (`device_type_nid` ASC),
	  INDEX `person_alert_transport_alert_transport_fk1_idx` (`alert_transport_type_id` ASC),
	  INDEX `person_alert_transport_alert_category_fk1_idx` (`alert_category_id` ASC),
	  INDEX `person_alert_transport_person_fk1_idx` (`person_nid` ASC),
	  CONSTRAINT `person_alert_transport_alert_transport_fk1`
	    FOREIGN KEY (`alert_transport_type_id`)
	    REFERENCES `covidiendb`.`alert_transport_type` (`id`)
	    ON DELETE CASCADE
	    ON UPDATE RESTRICT,
	  CONSTRAINT `person_alert_transport_alert_category_fk1`
	    FOREIGN KEY (`alert_category_id`)
	    REFERENCES `covidiendb`.`alert_category` (`id`)
	    ON DELETE RESTRICT
	    ON UPDATE CASCADE)
	ENGINE = InnoDB");
  //alert_message_template
  db_query("DROP TABLE IF EXISTS alert_message_template");
  db_query("CREATE TABLE IF NOT EXISTS alert_message_template (
    id INT(11) NOT NULL AUTO_INCREMENT,
    name VARCHAR(50) NOT NULL,
    template_path VARCHAR(200) NOT NULL,
    description VARCHAR(500) NULL,
    alert_event_id INT(11) NOT NULL,
    alert_transport_type_id INT(11) NOT NULL,
    message_subject_text VARCHAR(100) NULL,
    PRIMARY KEY (id),
    INDEX alert_message_template_alert_event_fk1_idx (alert_event_id ASC),
    INDEX alert_message_template_alert_transport_type_fk1_idx (alert_transport_type_id ASC),
    CONSTRAINT alert_message_template_alert_event_fk1
      FOREIGN KEY (alert_event_id)
      REFERENCES alert_event (id)
      ON DELETE RESTRICT
      ON UPDATE CASCADE,
    CONSTRAINT alert_message_template_alert_transport_type_fk1
      FOREIGN KEY (alert_transport_type_id)
      REFERENCES alert_transport_type (id)
      ON DELETE RESTRICT
      ON UPDATE CASCADE)
    ENGINE = InnoDB");
  //device_type_alert_template_relation
  db_query("DROP TABLE IF EXISTS device_type_alert_template_relation");
  db_query("CREATE TABLE IF NOT EXISTS device_type_alert_template_relation (
    id INT(11) NOT NULL AUTO_INCREMENT,
    alert_message_template_id INT(11) NOT NULL,
    device_type_nid INT(11) NOT NULL,
    INDEX device_type_alert_message_template_fk1_idx (alert_message_template_id ASC),
    PRIMARY KEY (id),
    INDEX device_type_alert_template_device_type_fk1_idx (device_type_nid ASC),
    UNIQUE INDEX alert_message_template_id_UNIQUE (alert_message_template_id ASC),
    CONSTRAINT device_type_alert_message_template_fk1
      FOREIGN KEY (alert_message_template_id)
      REFERENCES alert_message_template (id)
      ON DELETE RESTRICT
      ON UPDATE CASCADE)
    ENGINE = INNODB");
  //application_role_alert
  db_query("DROP TABLE IF EXISTS application_role_alert");
  db_query("CREATE TABLE IF NOT EXISTS application_role_alert (
    id INT(11) NOT NULL AUTO_INCREMENT,
    application_role_pk INT(11) NOT NULL,
    active_flag ENUM('Y','N') NOT NULL,
    device_type_alert_template_association_id INT(11) NOT NULL,
    INDEX application_role_idx (application_role_pk ASC),
    PRIMARY KEY (id),
    INDEX application_role_alert_device_type_alert_template_fk1_idx (device_type_alert_template_association_id ASC),
    CONSTRAINT application_role_alert_device_type_alert_template_fk1
      FOREIGN KEY (device_type_alert_template_association_id)
      REFERENCES device_type_alert_template_relation (id)
      ON DELETE RESTRICT
      ON UPDATE CASCADE)
    ENGINE = InnoDB");
  //technical_notification
  db_query("DROP TABLE IF EXISTS technical_notification");
  db_query("CREATE TABLE IF NOT EXISTS `covidiendb`.`technical_notification` (
	  `id` INT(10) NOT NULL AUTO_INCREMENT,
	  `notification_name` VARCHAR(100) NOT NULL,
	  `from_date` DATETIME NULL,
	  `to_date` DATETIME NULL,
	  `active_status` ENUM('Y','N') NOT NULL,
	  `notification_state` INT(10) NOT NULL,
	  `message_text` VARCHAR(128) NULL,
	  `summary` VARCHAR(1500) NULL,
	  `create_time` DATETIME NOT NULL,
	  `alert_event_id` INT(10) NOT NULL,
	  `display_flag` ENUM('Y','N') NOT NULL DEFAULT 'N',
	  `time_zone` VARCHAR(10) NULL,
	  PRIMARY KEY (`id`),
	  INDEX `tech_notification_from_idx` (`from_date` ASC, `notification_state` ASC),
	  INDEX `tech_notification_to_idx` (`to_date` ASC, `notification_state` ASC),
	  INDEX `tech_notification_from_to_idx` (`from_date` ASC, `to_date` ASC, `notification_state` ASC),
	  INDEX `tech_notification_alert_event_fk1_idx` (`alert_event_id` ASC))
	ENGINE = InnoDB");
  //technical_notification_schedule
  db_query("DROP TABLE IF EXISTS technical_notification_schedule");
  db_query("CREATE TABLE IF NOT EXISTS technical_notification_schedule (
    id INT(11) NOT NULL AUTO_INCREMENT,
    technical_notification_id INT(11) NOT NULL,
    active_status ENUM('Y','N') NULL,
    on_completion_flag ENUM('Y','N') NULL,
    internal_only_flag ENUM('Y','N') NULL,
    schedule_date DATETIME NOT NULL,
    alert_message_template_id INT(11) NOT NULL,
    PRIMARY KEY (id),
    INDEX notification_schedule_technical_notification_fk1_idx (technical_notification_id ASC),
    INDEX notification_schedule_alert_message_template_fk1_idx (alert_message_template_id ASC),
    CONSTRAINT notification_schedule_technical_notification_fk1
      FOREIGN KEY (technical_notification_id)
      REFERENCES technical_notification (id)
      ON DELETE RESTRICT
      ON UPDATE CASCADE,
    CONSTRAINT notification_schedule_alert_message_template_fk1
      FOREIGN KEY (alert_message_template_id)
      REFERENCES alert_message_template (id)
      ON DELETE RESTRICT
      ON UPDATE CASCADE)
    ENGINE = InnoDB");

  //use foreign key checks
  db_query("SET FOREIGN_KEY_CHECKS=1");
}

function covidien_alert_update_6010() {
  db_query("ALTER TABLE `covidiendb`.`alert` CHANGE COLUMN `reason` `reason` LONGTEXT NULL DEFAULT NULL ");
}

function covidien_alert_update_6011() {
  db_query("INSERT INTO alert_event (name,description,category_id) values('Unknown Component', 'Unknown component be found from device.', (select id from alert_category where name='Business'))");
}

function covidien_alert_update_6012() {
  db_query("INSERT INTO alert_event (name,description,category_id) values('Trade Embargo Alert', 'The Device #sn was installed in #Country, which is a trade Embargo country.', (select id from alert_category where name='Business'))");
}

//Add in Alert Tab Permission
function covidien_alert_update_6013() {
  $feature_access_node = node_load(array('title' => 'Alert Tab', 'type' => 'app_section'));
  if ($feature_access_node) {
    return;
  }
  $catalog_section_tab = db_result(db_query("SELECT nid FROM node WHERE TYPE='app_section' AND title='Catalog Management Section'"));
  $node = new stdClass();
  $node->type = 'app_section';
  $node->status = 1;
  $node->uid = 1;
  $node->title = 'Alert Tab';
  $node->field_ipermit_class[0]['value'] = 0;
  $node->field_parent_access_section[0]['nid'] = $catalog_section_tab;
  $node->field_section_name[0]['value'] = 'Alert Tab';
  $node->name = 'admin';
  //add Alert catalog Tab to access roles
  node_save($node);
  $nid = $node->nid;

  $section_option['no'] = db_result(db_query("SELECT nid FROM node WHERE TYPE='access_option' AND title='No'"));
  $node = new stdClass();
  $node->type = 'section_access_option';
  $node->status = 1;
  $node->uid = 1;
  $node->title = 'auto section_access_option Alert Management Tab-No';
  $node->field_access_option[0]['nid'] = $section_option['no'];
  $node->field_app_section[0]['nid'] = $nid;
  $node->name = 'admin';
  //add Alert catalog section to access roles
  node_save($node);

  $section_option['view'] = db_result(db_query("SELECT nid FROM node WHERE TYPE='access_option' AND title='View Only'"));
  $node = new stdClass();
  $node->type = 'section_access_option';
  $node->status = 1;
  $node->uid = 1;
  $node->title = 'auto section_access_option Alert Management Tab-View Only';
  $node->field_access_option[0]['nid'] = $section_option['view'];
  $node->field_app_section[0]['nid'] = $nid;
  $node->name = 'admin';
  //add Alert catalog section to access roles
  node_save($node);

  $section_option['edit'] = db_result(db_query("SELECT nid FROM node WHERE TYPE='access_option' AND title='View & Edit'"));
  $node = new stdClass();
  $node->type = 'section_access_option';
  $node->status = 1;
  $node->uid = 1;
  $node->title = 'auto section_access_option Alert Management Tab-View & Edit';
  $node->field_access_option[0]['nid'] = $section_option['edit'];
  $node->field_app_section[0]['nid'] = $nid;
  $node->name = 'admin';
  //add Alert catalog section to access roles
  node_save($node);
}

function covidien_alert_update_6014() {
  db_query("ALTER TABLE `covidiendb`.`technical_notification_schedule` 
	DROP FOREIGN KEY `notification_schedule_alert_message_template_fk1`;");
  db_query("ALTER TABLE `covidiendb`.`technical_notification_schedule` 
  	DROP COLUMN `alert_message_template_id`,
	DROP INDEX `notification_schedule_alert_message_template_fk1_idx` ;");
  db_query("ALTER TABLE `covidiendb`.`technical_notification_schedule` 
	ADD COLUMN `subject_line` VARCHAR(100) NULL DEFAULT NULL AFTER `schedule_date`;");

  return array(array('success' => true, 'query' => 'Remove column alert_message_template_id, and add column subject_line.'));
}

function covidien_alert_update_6015() {
  db_query("ALTER TABLE `covidiendb`.`technical_notification` 
        CHANGE COLUMN `notification_state` `transport_type_id` INT(10) NOT NULL ,
        ADD INDEX `technical_notification_alert_transport_fk1_idx` (`transport_type_id` ASC);");
  db_query("ALTER TABLE `covidiendb`.`technical_notification` 
        ADD CONSTRAINT `technical_notification_alert_transport_fk1`
          FOREIGN KEY (`transport_type_id`)
          REFERENCES `covidiendb`.`alert_transport_type` (`id`)
          ON DELETE RESTRICT
          ON UPDATE CASCADE;");
}

/**
 * alert_state GATEWAY-2377
 * -Pending  -Sent  -Duplicate  -Acknowledged  -Resolved  -Closed
 */
function covidien_alert_update_6016() {
  db_query("SET FOREIGN_KEY_CHECKS=0");
  $status_array = array('Pending', 'Sent', 'Duplicate', 'Acknowledged', 'Resolved', 'Closed');
  //get not in status
  $result = db_query("SELECT id, name FROM {alert_state}");
  $rows = $not_rows = array();
  while ($row = db_fetch_object($result)) {
    //all rows 
    $rows[$row->id] = $row->name;
    //need delete rows
    if (!in_array($row->name, $status_array)) {
      $not_rows[$row->id] = $row->id;
    }
  }
  if (count($not_rows)) {
    //get pending status
    $pending_id = db_result(db_query("SELECT id FROM {alert_state} WHERE name='%s'", 'Pending'));
    //update need delete state to Pending
    db_query("UPDATE {alert} SET alert_state_id=%d WHERE alert_state_id IN (" . db_placeholders($not_rows) . ")", array_merge(array($pending_id), $not_rows));
    db_query("UPDATE {alert_state_history} SET alert_state_id=%d WHERE alert_state_id IN (" . db_placeholders($not_rows) . ")", array_merge(array($pending_id), $not_rows));
    //remove state
    db_query("DELETE FROM {alert_state} WHERE id IN (" . db_placeholders($not_rows) . ")", $not_rows);
  }
  //insert status
  $add_rows = array_diff($status_array, $rows);
  if (count($add_rows)) {
    foreach ($add_rows as $name) {
      db_query("INSERT INTO {alert_state} (name) VALUES ('%s')", $name);
    }
  }
  db_query("SET FOREIGN_KEY_CHECKS=1");

  return array(array('success' => true, 'query' => 'Update alert status.'));
}

function covidien_alert_event_config() {
  $category_array = array(
    'Business alert' => array(
      array(
        'name' => 'Device Country Changed',
        'description' => 'The country sent by the Client is different from the Device record in server',
      ),
      array(
        'name' => 'Upgrade Attempt: Device Failed to Apply Upgrade',
        'description' => 'Upgrade Failed Alert - A software upgrade package has failed or installation was incomplete',
      ),
      array(
        'name' => 'Upgrade Attempt: User Has Insufficient Permission',
        'description' => 'Attempt to update software without upgrade privileges',
      ),
      array(
        'name' => 'Upgrade Attempt: No Trade Embargo Exception',
        'description' => 'Alert when a user docks a device in Trade Embargo country, but has no exception',
      ),
      array(
        'name' => 'Upgrade Attempt: Upgrade Started But Not Completed',
        'description' => 'A software update is started but not completed within a configurable time limit, while in the connected mode',
      ),
      array(
        'name' => 'Upgrade Attempt: Device Not in User’s Account',
        'description' => 'Alert when a non-Covidien user attempts to upgrade SW on a device which is assigned to an account number which is not the user\'s account number.  (RMS only)',
      ),
    ),
    'Informational alert' => array(
      array(
        'name' => 'Device Configuration Changed',
        'description' => 'A device\'s configuration has changed (discrepancy report regarding HW/SW/FW)',
      ),
      array(
        'name' => 'Device Serial Number Changed',
        'description' => 'Serial Number changed',
      ),
      array(
        'name' => 'Device Feature(s) Enabled/Disabled',
        'description' => 'Feature Enablement',
      ),
      array(
        'name' => 'Upgrade Attempt: Successful',
        'description' => 'Device update',
      ),
      array(
        'name' => 'New Device Record Created',
        'description' => 'New device registration',
      ),
    ),
    'General Notification' => array(
      array(
        'name' => 'System Upgrade Notice',
        'description' => 'System upgrade',
      ),
      array(
        'name' => 'General Notice to Users Associated With COT/Device',
        'description' => 'Marketing or general information email notice to users of a device type (not implemented) of CoT group',
      ),
    ),
  );
  return $category_array;
}

function covidien_alert_event_update() {
  $category_array = covidien_alert_event_config();
  db_query("SET FOREIGN_KEY_CHECKS=0");
  $category = $events = array();
  foreach ($category_array as $key => $item) {
    $category[] = $key;
    //get category
    $cid = db_result(db_query("SELECT id FROM {alert_category} WHERE name='%s'", $key));
    if (!$cid) {
      db_query("INSERT INTO {alert_category} (name) VALUES ('%s')", $key);
      $cid = db_last_insert_id('alert_category', 'id');
    }
    foreach ($item as $event) {
      $events[] = $event['name'];
      //get event
      $eid = db_result(db_query("SELECT id FROM {alert_event} WHERE name='%s'", $event['name']));
      if (!$eid) {
        db_query("INSERT INTO {alert_event} (name, description, category_id) VALUES ('%s', '%s', %d)", $event['name'], $event['description'], $cid);
        $eid = db_last_insert_id('alert_event', 'id');
      } else {
        db_query("UPDATE {alert_event} SET category_id=%d, description='%s' WHERE id=%d", $cid, $event['description'], $eid);
      }
    }
  }
  //delete category 
  db_query("DELETE FROM {alert_category} WHERE name NOT IN (" . db_placeholders($category, 'varchar') . ")", $category);
  //delete event     var_dump($events);
  db_query("DELETE FROM {alert_event} WHERE name NOT IN (" . db_placeholders($events, 'varchar') . ")", $events);
  //update use FOREIGN_KEY_CHECKS
  db_query("SET FOREIGN_KEY_CHECKS=1");
}

/**
 * GATEWAY-2376 GATEWAY-2365 GATEWAY-2348 Update alert category and event
 * @return array
 * return message
 */
function covidien_alert_update_6017() {
  covidien_alert_event_update();
  return array(array('success' => true, 'query' => 'Update alert category and event.'));
}

function covidien_alert_update_6018() {
  db_query("ALTER TABLE `covidiendb`.`technical_notification` 
    ADD COLUMN `complete_flag` ENUM('Y','N') NULL DEFAULT 'N' AFTER `time_zone`;");
  db_query("ALTER TABLE `covidiendb`.`technical_notification_schedule` 
	ADD COLUMN `sent_flag` ENUM('Y','N') NULL DEFAULT 'N' AFTER `subject_line`,
	ADD COLUMN `device_type_nid` INT(10) NULL AFTER `sent_flag`;");
  db_query("ALTER TABLE `covidiendb`.`technical_notification` 
	CHANGE COLUMN `message_text` `message_text` LONGTEXT NULL ,
	CHANGE COLUMN `summary` `summary` LONGTEXT NULL DEFAULT NULL ;");
  return array(array('success' => true, 'query' => 'Add columns to technical_notification and technical_notification_schedule.'));
}

function covidien_alert_update_6019() {
  module_load_include('module', 'covidien_ui');
  covidien_update_log('Run ' . __FUNCTION__);

  $ret = array();
  $field = array('type' => 'int', 'length' => 11, 'description' => 'changed time');
  db_add_field($ret, 'alert', 'changed', $field);

  module_load_include('module', 'covidien_ui');
  covidien_update_log('Finished ' . __FUNCTION__);

  return $ret;
}

function covidien_alert_update_6020() {
  covidien_alert_event_update();
  return array(array('success' => true, 'query' => 'Update alert category and event.'));
}

function covidien_alert_update_6021() {
  $ret = array();
  $weight_field = array('type' => 'int', 'length' => 11, 'not null' => true, 'default' => 0, 'description' => 'order by wright');
  $changed_field = array('type' => 'varchar', 'length' => 50, 'not null' => true, 'default' => '', 'description' => 'can change to status id');
  //add field
  db_add_field($ret, 'alert_state', 'weight', $weight_field);
  db_add_field($ret, 'alert_state', 'link_id', $changed_field);
  //update alert link and weight
  covidine_alert_status_link();
  return $ret;
}

function covidine_alert_status_link() {
  $alert_status = array(
    'Pending' => array('Pending'),
    'Sent' => array('Sent', 'Acknowledged', 'Resolved'),
    'Duplicate' => array('Duplicate', 'Closed'),
    'Acknowledged' => array('Acknowledged', 'Resolved'),
    'Resolved' => array('Resolved', 'Closed'),
    'Closed' => array('Closed'),
  );
  $i = 1;
  foreach ($alert_status as $name => $links) {
    //var_dump($name, $links);
    $id = db_result(db_query("SELECT id FROM {alert_state} WHERE name='%s'", $name));
    //get links 
    $result = db_query("SELECT id FROM {alert_state} WHERE name IN (" . db_placeholders($links, 'varchar') . ")", $links);
    $rows = array();
    while ($row = db_fetch_object($result)) {
      $rows[$row->id] = $row->id;
    }
    $link = implode(',', $rows);
    //update
    if ($id) {
      db_query("UPDATE {alert_state} SET weight=%d WHERE id=%d", $i, $id);
      db_query("UPDATE {alert_state} SET link_id='%s' WHERE id=%d", $link, $id);
    } else {
      db_query("INSERT INTO {alert_state} (name, weight, link_id) VALUES ('%s', %d, '%s')", $name, $i, $link);
    }
    $i++;
  }
}

function covidien_alert_update_6022() {
  $cid = db_result(db_query("SELECT id FROM {alert_category} WHERE name='Informational alert'"));
  db_query("INSERT {alert_event} (NAME,DESCRIPTION,CATEGORY_ID) VALUES('Device Configuration Updated','Device Configuration Updated',%d)", $cid);
  return array(array('success' => true, 'insert' => 'insert alert event.'));
}

function covidien_alert_update_6023() {
  //get all roles nids
  $role_result = db_query("SELECT nid FROM {node} WHERE type = 'roles'");
  $role_rows = array();
  while ($role_row = db_fetch_object($role_result)) {
    $role_rows[$role_row->nid] = $role_row->nid;
  }
  //get alert option nid
  $alert_edit_nid = db_result(db_query("SELECT nid FROM {node} WHERE title LIKE '%s' AND type = 'section_access_option'", '%Alert%Edit%'));
  //get old alert access nid
  $query_args = array_merge(array('%Alert%'), $role_rows);
  $option_result = db_query("SELECT arap.nid FROM {node} n
    JOIN {content_type_app_role_access_policy} arap ON n.nid = arap.field_section_access_option_nid
    WHERE title LIKE '%s' AND TYPE = 'section_access_option' AND arap.field_app_role_nid IN (" . db_placeholders($role_rows) . ")", $query_args);
  $alert_access = array();
  while ($row = db_fetch_object($option_result)) {
    $alert_access[$row->nid] = $row->nid;
  }
  //delete old alert access
  foreach ($alert_access as $access_nid) {
    node_delete($access_nid);
  }

  //save cot admin default access is edit
  foreach ($role_rows as $role_nid) {
    $node = new stdClass();
    $node->type = 'app_role_access_policy';
    $node->uid = 1;
    $node->format = 0;
    $node->title = 'Roles Access';
    $node->field_app_role[] = array('nid' => $role_nid);
    $node->field_section_access_option[] = array('nid' => $alert_edit_nid);
    node_save($node);
  }
  return array(array('success' => true, 'query' => 'Update Alert Access to Edit for all roles.'));
}

function covidien_alert_update_6024() {
  $cid = db_result(db_query("SELECT id FROM {alert_category} WHERE name='Informational alert'"));
  db_query("INSERT {alert_event} (NAME,DESCRIPTION,CATEGORY_ID) VALUES('Device Docked with Unknown Configuration','Device docked with unknown configuration',%d)", $cid);
  return array(array('success' => true, 'insert' => 'insert alert event.'));
}

function covidien_alert_update_6025() {
  $result = db_query("select distinct device_type_nid from device_type_alert_event_relation");
  $device_type_arr = array();
  while($row = db_fetch_object($result)){
    $device_type_arr[] = $row->device_type_nid;
  }
  if(!empty($device_type_arr)){
    foreach ($device_type_arr as $device_type_nid) {
      db_query("insert into device_type_alert_event_relation (alert_event_id,enable_flag,device_type_nid) values 
      ((select id from alert_event where name='Device Docked with Unknown Configuration'),'N',%d)",$device_type_nid);
    }
  }
  return array(array('success' => true, 'insert' => 'insert alert event to device_type_alert_event_relation'));
}