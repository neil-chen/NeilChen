<?php

/**
 * @file
 * This file used to customize the drupal node form based on the covidien UI.
 * Implements hook_form_alter() to customize the node form.
 */
function covidien_sw_regulatory_approval_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'software_approval_unavailable_node_form') {
    drupal_add_js(drupal_get_path('module', 'covidien_sw_regulatory_approval') . '/js/covidien_sw_regulatory_approval.js');
    $form['product_line'] = array('#type' => "text", '#attributes' => array('readonly' => 'readonly'));
    if ($form['nid']['#value']) {
      $form['field_reg_approved_country']['#pre_render'] = array(field_device_type_disabled);
    }
  }
}

/**
 * Implements hook_theme() to customize form and list page.
 */
function covidien_sw_regulatory_approval_theme() {
  return array(
    'regulatory_approval_list' => array(
      'template' => 'regulatory-approval-list',
      'arguments' => array('form' => NULL, 'get' => NULL),
    ),
  );
}

/**
 * Function get software value from url: menu located in covidien_users module file
 */
function regulatory_approval($sw) {
  $output = theme('regulatory_approval_list', $sw);
  return $output;
}

/**
 * Alter fields for list regulatory approval list page, included js files for colorbox
 */
function template_preprocess_regulatory_approval_list(&$variables) {
  drupal_add_js(drupal_get_path('module', 'covidien_users') . '/js/newjquery.min.js');
  drupal_add_js(drupal_get_path('module', 'covidien_users') . '/js/jquery.colorbox-min.js');
  drupal_add_js(drupal_get_path('module', 'covidien_users') . '/js/editor.js');
  drupal_add_js(drupal_get_path('module', 'covidien_users') . '/js/jquery-ui.min.js');
  drupal_add_css(drupal_get_path('module', 'covidien_users') . '/css/colorbox.css');
  drupal_add_css(drupal_get_path('module', 'covidien_devices') . '/css/tabs.css');
  $variables['sw'] = filter_xss(trim(arg(2)));
  $id = filter_xss(trim(arg(2)));
  $result = node_load($id);
  $variables['id'] = $id;
  $variables['sw_name'] = $result->title;
  $variables['sw_ver'] = $result->field_sw_version[0]['value'];
  $variables['sw_desc'] = $result->field_sw_description[0]['value'];
  $variables['sw_part'] = $result->field_sw_part[0]['value'];
  $variables['sw_regulatory_list'] = views_embed_view("regulatory_approval_list", "page_1", $id);
}

/**
 * Implement hook_nodeapi for validate, insert and update function
 */
function covidien_sw_regulatory_approval_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  global $base_url;
  if ($node->form_id == 'software_approval_unavailable_node_form') {
    switch ($op) {
      case 'insert':
        $sw = $node->field_reg_approved_component[0]['nid'];
        echo '<script type="text/javascript">window.top.location.href = "' . $base_url . '/covidien/admin/' . $sw . '/sw_regulatory_approval"; </script>';
        exit;
        //break;
      case 'update':
        $node = node_load($node->nid);
        $node->field_expiration_datetime[0]['value'] = date('Y-m-d h:i:s');
        node_save($node);
        $sw = $node->field_reg_approved_component[0]['nid'];
        echo '<script type="text/javascript">window.top.location.href = "' . $base_url . '/covidien/admin/' . $sw . '/sw_regulatory_approval"; </script>';
        exit;
        //break;
      case "validate":
        drupal_add_js(drupal_get_path('module', 'covidien_sw_regulatory_approval') . '/js/covidien_sw_regulatory_approval.js');
        $country = $node->field_reg_approved_country[0]['nid'];
        $sw = $node->field_reg_approved_component[0]['nid'];

        if (!$node->nid) {
          $result = db_result(db_query("select content_type_software_approval_unavailable.nid from content_type_software_approval_unavailable join node on node.nid=content_type_software_approval_unavailable.nid and node.vid=content_type_software_approval_unavailable.vid join content_field_expiration_datetime on content_field_expiration_datetime.nid=content_type_software_approval_unavailable.nid and content_field_expiration_datetime.vid=content_type_software_approval_unavailable.vid and content_field_expiration_datetime.field_expiration_datetime_value IS NULL where  content_type_software_approval_unavailable.field_reg_approved_component_nid='%s' and content_type_software_approval_unavailable.field_reg_approved_country_nid='%s'", $sw, $country));
        } else {
          $result = db_result(db_query("select content_type_software_approval_unavailable.nid from content_type_software_approval_unavailable join node on node.nid=content_type_software_approval_unavailable.nid and node.vid=content_type_software_approval_unavailable.vid join content_field_expiration_datetime on content_field_expiration_datetime.nid=content_type_software_approval_unavailable.nid and content_field_expiration_datetime.vid=content_type_software_approval_unavailable.vid and content_field_expiration_datetime.field_expiration_datetime_value IS NULL where  content_type_software_approval_unavailable.field_reg_approved_component_nid='%s' and content_type_software_approval_unavailable.field_reg_approved_country_nid='%s' and content_type_software_approval_unavailable.nid != '%s'", $sw, $country, $node->nid));
        }
        if ($result) {
          form_set_error("field_reg_approved_country", t("Country is already present in denied Country list"));
        }
        if ($node->field_reg_approved_country[0]['nid'] == "") {
          drupal_get_messages();
          form_set_error("field_reg_approved_country", t("Invalid Country"));
        }
        break;
    }
  }
}

/**
 * Implements hook_views_default_views(). Import all views related to module on installing
 */
function covidien_sw_regulatory_approval_views_default_views() {
  $files = file_scan_directory(drupal_get_path('module', 'covidien_sw_regulatory_approval') . '/views', '.inc');
  foreach ($files as $absolute => $file) {
    require $absolute;
    if (isset($view)) {
      $views[$file->name] = $view;
    }
  }
  return $views;
}
