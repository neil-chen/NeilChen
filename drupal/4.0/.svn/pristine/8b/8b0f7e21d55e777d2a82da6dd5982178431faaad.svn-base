<?php

/**
 * Query functions
 */
function getCustomerNameQuery($customer_nid) {
  return db_result(db_query("select title FROM {node} WHERE nid = '%s'", $customer_nid));
}

function getAccountNumberQuery($account_nid) {
  $query = "SELECT field_bu_customer_account_number_value 
		FROM content_type_bu_customer bu_customer 
		JOIN node node ON node.vid = bu_customer.vid 
		LEFT JOIN content_field_expiration_datetime expiry 
		ON expiry.vid = bu_customer.vid WHERE node.nid = %d 
		AND expiry.field_expiration_datetime_value IS NULL";
  return db_result(db_query($query, $account_nid));
}

function autoSuggestionNameQuery($string, $product_line) {
  $where = '';
  $matches = array();
  if ($product_line != "all") {
    $where = " and T4.field_role_product_line_nid = '" . $product_line . "'";
  }
  $result = db_query_range("SELECT node.title as title, " .
    "CONCAT(T1.field_first_name_value,' ',T1.field_last_name_value) as name " .
    "FROM {node} node JOIN {content_type_person} as T1 on node.vid = T1.vid " .
    "JOIN {content_field_person_pk} as T2 on T1.nid = T2.field_person_pk_nid " .
    "JOIN {content_field_app_role_pk} as T3 on T2.nid = T3.nid " .
    "JOIN {content_type_roles} as T4 on T4.nid = T3.field_app_role_pk_nid " .
    "JOIN {content_field_expiration_datetime} as T5 on T1.nid = T5.nid " .
    "WHERE node.type = 'person' AND ((LOWER(T1.field_last_name_value) LIKE LOWER('%%%s%%') " .
    "OR LOWER(T1.field_first_name_value) LIKE LOWER('%%%s%%') " .
    "OR CONCAT(LOWER(T1.field_first_name_value),' '," .
    "LOWER(T1.field_last_name_value)) LIKE LOWER('%%%s%%')) " .
    "OR LOWER(node.title) LIKE LOWER('%%%s%%'))" .
    "AND (T5.field_expiration_datetime_value = '0000-00-00 00:00:00' OR T5.field_expiration_datetime_value IS NULL)" .
    "$where", $string, $string, $string, $string, 0, 20);
  while ($row = db_fetch_object($result)) {
    if (empty($string)) {
      if (!empty($row->name)) {
        $matches[$row->name] = $row->name . ' - ' . $row->title;
      }
      if (!empty($row->title)) {
        //    $matches[$row->title] = $row->title;
      }
    } elseif (strpos(strtolower($row->name), strtolower($string)) !== false) {
      $matches[$row->name] = $row->name . ' - ' . $row->title;
    } elseif (strpos(strtolower($row->title), strtolower($string)) !== false) {
      $matches[$row->name] = $row->name . ' - ' . $row->title;
    }
  }
  $matches = array_splice($matches, 0, 20);
  return $matches;
}

function getTotalRows($string, $name, $product_line) {
  $where = '';
  if ($product_line != "all") {
    $where = " and T4.field_role_product_line_nid = '" . $product_line . "'";
  }
  $query = "SELECT " .
    "T1.field_person_username_value as name, " .
    "CONCAT(T1.field_first_name_value,' ',T1.field_last_name_value) as lfname " .
    "FROM {node} as node " .
    "JOIN {content_type_person} as T1 on T1.vid = node.vid " .
    "JOIN {content_field_person_pk} as T2 on T1.nid = T2.field_person_pk_nid " .
    "JOIN {content_field_app_role_pk} as T3 on T2.nid = T3.nid " .
    "JOIN {content_type_roles} as T4 on T4.nid = T3.field_app_role_pk_nid " .
    "JOIN {content_field_expiration_datetime} as T5 on T1.nid = T5.nid " .
    "WHERE CONCAT(LOWER(T1.field_first_name_value),' '," .
    "LOWER(T1.field_last_name_value)) = '%s' " .
    "AND (T5.field_expiration_datetime_value = '0000-00-00 00:00:00' OR T5.field_expiration_datetime_value IS NULL) $where";
  $result = db_query_range($query, $name, $string, 0, 20);
  return $total_count = db_affected_rows();
}

function getAllUsernameQuery($string, $product_line) {
  $matches = array();
  $where = '';
  if ($product_line != "all") {
    $where = " and T4.field_role_product_line_nid = '" . $product_line . "'";
  }
  $query = "SELECT " .
    "T1.field_person_username_value as name " .
    "FROM {node} as node " .
    "JOIN {content_type_person} as T1 on T1.vid = node.vid " .
    "JOIN {content_field_person_pk} as T2 on T1.nid = T2.field_person_pk_nid " .
    "JOIN {content_field_app_role_pk} as T3 on T2.nid = T3.nid " .
    "JOIN {content_type_roles} as T4 on T4.nid = T3.field_app_role_pk_nid " .
    "JOIN {content_field_expiration_datetime} as T5 on T1.nid = T5.nid " .
    "WHERE T1.field_person_username_value LIKE LOWER('%%%s%%') " .
    "AND (T5.field_expiration_datetime_value = '0000-00-00 00:00:00' OR T5.field_expiration_datetime_value IS NULL) $where";
  $result = db_query_range($query, $string, 0, 20);
  while ($row = db_fetch_object($result)) {
    $matches[$row->name] = $row->name;
  }
  return $matches;
}

function getUsernameByNameQuery($name, $string, $product_line) {
  $matches = array();
  $where = '';
  if ($product_line != "all") {
    $where = " and T4.field_role_product_line_nid = '" . $product_line . "'";
  }
  $query = "SELECT " .
    "T1.field_person_username_value as name, " .
    "CONCAT(T1.field_first_name_value,' ',T1.field_last_name_value) as lfname " .
    "FROM {node} as node " .
    "JOIN {content_type_person} as T1 on T1.vid = node.vid " .
    "JOIN {content_field_person_pk} as T2 on T1.nid = T2.field_person_pk_nid " .
    "JOIN {content_field_app_role_pk} as T3 on T2.nid = T3.nid " .
    "JOIN {content_type_roles} as T4 on T4.nid = T3.field_app_role_pk_nid " .
    "JOIN {content_field_expiration_datetime} as T5 on T1.nid = T5.nid " .
    "WHERE CONCAT(LOWER(T1.field_first_name_value),' '," .
    "LOWER(T1.field_last_name_value)) = '%s' " .
    "AND T1.field_person_username_value LIKE LOWER('%%%s%%') " .
    "AND (T5.field_expiration_datetime_value = '0000-00-00 00:00:00' OR T5.field_expiration_datetime_value IS NULL) $where";
  $result = db_query_range($query, $name, $string, 0, 20);
  while ($row = db_fetch_object($result)) {
    $matches[$row->name] = $row->name;
  }
  return $matches;
}

function getAllProductLineQuery() {
  $result = db_query("select nid,title from {node} where type = 'product_line'");
  return $result;
}

/**
 * Function to get Users product line list
 */
function UsersProductlineQuery($nid = '') {
  $query = "SELECT " .
    "T5.title as productline, T5.nid " .
    "FROM {content_type_person_application_role} as T1 " .
    "JOIN {content_field_app_role_pk} as T2 on T1.nid = T2.nid " .
    "JOIN {content_field_person_pk} as T3 on T1.nid = T3.nid " .
    "JOIN {content_type_roles} as T4 on T2.field_app_role_pk_nid = T4.nid " .
    "JOIN {node} as T5 on T4.field_role_product_line_nid = T5.nid " .
    "JOIN {node} as T6 on T4.nid = T6.nid " .
    "WHERE T3.field_person_pk_nid = '%s' ORDER BY T5.nid ASC";
  $result = db_query($query, $nid);
  $arr = array();
  while ($row = db_fetch_object($result)) {
    $arr[$row->nid] = $row->productline;
  }
  return $arr;
}

function getRolesByPermQuery($permission) {
  $query = "SELECT r.* FROM {role} r " .
    "INNER JOIN {permission} p ON r.rid = p.rid " .
    "WHERE p.perm LIKE '%%%s%%' ORDER BY r.name";
  return db_query($query, $permission);
}

function getAllRolesQuery() {
  return db_query("select rid, name from {role}");
}

function getAllUserRolesQuery($uid) {
  $where = '';
  $value = '';
  if ($uid != 1) {
    $where = " where T1.uid = '%s'";
    $value = $uid;
  }
  $query = "select T2.rid, T2.name " .
    "FROM {users_roles} as T1 " .
    "JOIN  {role} as T2 on T1.rid = T2.rid $where ORDER BY T2.name ASC";
  return db_query($query, $value);
}

function getUserDefaultRoleQuery($person_id) {
  $query = "SELECT " .
    "T5.title as productline, T5.nid, T6.title as role " .
    "FROM {content_type_person_application_role} as T1 " .
    "JOIN {content_field_app_role_pk} as T2 on T1.nid = T2.nid " .
    "JOIN {content_field_person_pk} as T3 on T1.nid = T3.nid " .
    "JOIN {content_type_roles} as T4 on T2.field_app_role_pk_nid = T4.nid " .
    "JOIN {node} as T5 on T4.field_role_product_line_nid = T5.nid " .
    "JOIN  {node} as T6 on T4.nid = T6.nid " .
    "WHERE T3.field_person_pk_nid = '%s' " .
    "AND T1.field_person_role_default_value = 1";
  return db_query($query, $person_id);
}

function getRolesIDQuery($name) {
  return db_result(db_query("select rid from {role} where name = '%s'", $name));
}

function getRolesNameQuery($id) {
  return db_result(db_query("Select name from {role} where rid = '%s'", $id));
}

function insertRoleQuery($productline, $title) {
  db_query("Insert into {role} (name) VALUES ('%s')", $productline . "__" . $title);
}

function insertPermissionQuery($rid) {
  $values = "access comments, post comments, post comments without approval, " .
    "access content, administer content types, administer nodes, " .
    "create device_type_config content, create document content, " .
    "create hardware content, create software content, " .
    "create user_settings content, edit any device_type_config content, " .
    "edit any document content, edit any hardware content, " .
    "edit any software content, edit any user_settings content, " .
    "administer users, administer permissions";
  db_query("Insert into {permission} (rid,perm) VALUES ('%s','%s')", $rid, $values);
}

function updateRoleinfoQuery($new, $old) {
  db_query("Update {role} set name = '%s' where rid = '%s'", $new, $old);
}

function autosuggestAccountNumQuery($covidien_user, $customer_id_arr, $value, $string) {
  $where = '';
  $qry_arg = array();
  if (!empty($value) && $value != 'all') {
    $where = ' node1.title="%s" and';
    $qry_arg[] = $value;
  }
  $tmpwhere = '';
  if ($covidien_user != 'Yes') {
    $customer_nid = implode(',', $customer_id_arr);
    $tmpwhere = " node1.nid IN (%s) AND ";
    $qry_arg[] = $customer_nid;
  }
  $qry_arg[] = $string;
  $query = "SELECT content_type_bu_customer.field_bu_customer_account_number_value 
  FROM {content_type_party} as content_type_party 
  JOIN {content_type_bu_customer} as content_type_bu_customer ON content_type_bu_customer.field_customer_party_pk_nid=content_type_party.nid 
  JOIN {node} as account_node ON account_node.vid = content_type_bu_customer.vid 
  JOIN {node} as node1 ON node1.nid=content_type_bu_customer.field_customer_party_pk_nid 
  LEFT JOIN {content_field_expiration_datetime} as expiry ON expiry.vid = content_type_bu_customer.vid 
  WHERE $where $tmpwhere content_type_bu_customer.field_bu_customer_account_number_value LIKE '%s%%' 
  AND expiry.field_expiration_datetime_value is NULL limit 0,20";
  return $result = db_query($query, $qry_arg);
}

function autosuggestCustomerNameQuery($covidien_user, $customer_id_arr, $value, $string) {
  $qry_arg = array();
  $where = '';
  if (!empty($value) && $value != 'all') {
    $where = ' bc.field_bu_customer_account_number_value="%s" and';
    $qry_arg[] = $value;
  }
  $tmpwhere = '';
  if ($covidien_user != 'Yes') {
    $customer_nid = implode(',', $customer_id_arr);
    $tmpwhere = " n.nid IN (%s) AND ";
    $qry_arg[] = $customer_nid;
  }
  $qry_arg[] = $string;
  $query = "SELECT n.title AS customername 
		FROM {content_type_party} cp
		JOIN {content_type_bu_customer} bc ON bc.field_customer_party_pk_nid=cp.nid 
		JOIN {node} n ON n.nid = bc.field_customer_party_pk_nid 
		LEFT JOIN {content_field_expiration_datetime} ed ON ed.vid = n.vid 
		WHERE $where $tmpwhere n.title LIKE '%s%%'
		AND ed.field_expiration_datetime_value IS NULL LIMIT 0,20";
  return $result = db_query($query, $qry_arg);
}

function ajaxCustomerNameQuery($covidien_user, $customer_id_arr, $value, $string) {
  $qry_arg = array();
  $where = '';
  if (!empty($value) && $value != 'all') {
    $where = ' AND bc.field_bu_customer_account_number_value="%s" ';
    $qry_arg[] = $value;
  }
  $tmpwhere = '';
  if ($covidien_user != 'Yes') {
    $customer_nid = implode(',', $customer_id_arr);
    $tmpwhere = " AND n.nid IN (%s) ";
    $qry_arg[] = $customer_nid;
  }
  $qry_arg[] = $string;
  $query = "SELECT n.title AS customername, n.nid, n.vid, ed.field_expiration_datetime_value
					FROM {content_type_party}
					JOIN {content_type_bu_customer} bc ON bc.field_customer_party_pk_nid=content_type_party.nid 
					JOIN {node} n ON n.nid = bc.field_customer_party_pk_nid 
					LEFT JOIN {content_field_expiration_datetime} ed ON n.vid = ed.vid
  				WHERE 1 $where $tmpwhere AND ed.field_expiration_datetime_value IS NULL limit 0,20;";
  return $result = db_query($query, $qry_arg);
}

function getUserSettingIDQuery($arg) {
  $query = "select nid from {node} node JOIN {users} users on users.name = node.title where users.uid = '%s' and node.type = 'user_settings'";
  return db_result(db_query($query, $arg));
}

function getUserNidfrmUidQuery($arg) {
  $query = "select nid from {node} node JOIN {users} users on users.name = node.title where users.uid = '%s' and node.type = 'person'";
  return db_result(db_query($query, $arg));
}

function getUserUidFrmNidQuery($nid) {
  $query = "select T2.uid from {node} as T1 " .
    "JOIN {users} T2 on T1.title = T2.name where T1.nid='%s'";
  return db_result(db_query($query, $nid));
}

function UpdateUserExpirationdateQuery($dateSQL, $arg) {
  db_query("update content_field_expiration_datetime expiry inner join node node on node.vid = expiry.vid set expiry.field_expiration_datetime_value = '%s' where node.nid = '%s' and node.type='person'", $dateSQL, $arg);
  db_query("update content_field_expiration_datetime expiry inner join node node on node.vid = expiry.vid set expiry.field_expiration_datetime_value = '%s' where node.nid = '%s' and node.type='party'", $dateSQL, $arg);
}

function getRoleidQuery($key) {
  $query = "SELECT " .
    "T1.rid as rid,T3.field_role_product_line_nid as pl " .
    "FROM {role} as T1 " .
    "JOIN {node} as T2 " .
    "JOIN {content_type_roles} as T3 on T2.nid = T3.nid " .
    "WHERE T2.nid='%s' and T2.type = 'roles' " .
    "AND T1.name = CONCAT(T3.field_role_product_line_nid,'__',T2.title)";
  return db_query($query, $key);
}

function getRoleNameQuery($id) {
  $query = "select T1.name from {role} T1 " .
    "JOIN {users_roles} T2 on T1.rid = T2.rid where T2.rid = '%s'";
  return db_result(db_query($query, $id));
}

function deleteRoldQuery($rid) {
  db_query("delete from {role} where rid='%s'", $rid);
}

function updateUserRoleQuery($rid) {
  db_query("update {users_roles} set rid='2' where rid='%s'", $rid);
}

function UpdateUserRoleNodeQuery($key) {
  $query = "update {content_field_app_role_pk} SET " .
    "field_app_role_pk_nid='' where field_app_role_pk_nid='%s'";
  db_query($query, $key);
}

function getPersonProductLineQuery($id) {
  $query = "SELECT T5.field_role_product_line_nid AS rid
					FROM {content_type_person} T2
					JOIN {content_field_person_pk} AS T3 ON T2.nid = T3.field_person_pk_nid
					JOIN {content_field_app_role_pk} AS T4 ON T3.nid = T4.nid
					JOIN {content_type_roles} AS T5 ON T4.field_app_role_pk_nid = T5.nid
					WHERE T2.nid = %d GROUP BY T5.field_role_product_line_nid";
  return db_query($query, $id);
}

function getallpersonpl($name) {
  $query = "SELECT T5.field_role_product_line_nid AS frnid FROM  {users} T1 
  		JOIN {node} node on T1.name = node.title 
  		JOIN {content_type_person} T2 on node.vid = T2.vid 
  		JOIN {content_field_person_pk} as T3 on T2.nid = T3.field_person_pk_nid 
  		JOIN {content_field_app_role_pk} as T4 on T3.nid = T4.nid 
  		JOIN {content_type_roles} as T5 on T4.field_app_role_pk_nid = T5.nid 
  		WHERE T1.name = '%s' GROUP BY T5.field_role_product_line_nid";
  return db_query($query, $name);
}

function getRolenidwithTitleQuery($rname1, $rname2) {
  $query = "SELECT T2.nid " .
    "FROM {node} as T1 join {content_type_roles} as T2 on T1.nid = T2.nid " .
    "WHERE T1.type='roles' and T1.title = '%s' " .
    "AND T2.field_role_product_line_nid = '%s' order by T1.nid desc";
  return db_result(db_query($query, $rname1, $rname2));
}

function getRolenidwithExpQuery($rname1, $rname2) {
  $query = "select T2.nid " .
    "FROM {node} as T1 " .
    "JOIN {content_type_roles} as T2 on T1.nid = T2.nid " .
    "JOIN {content_field_expiration_datetime} as T3 on T1.nid = T3.nid " .
    "WHERE T1.type='roles' and T1.title = '%s' " .
    "AND T2.field_role_product_line_nid = '%s' " .
    "AND T3.field_expiration_datetime_value IS NULL";
  return db_result(db_query($query, $rname1, $rname2));
}

function getUsersAccessOptions($nid) {
  $query = "Select T3.field_section_name_value, " .
    "T4.field_access_option_name_value " .
    "FROM {content_type_app_role_access_policy} as T1 " .
    "JOIN {node} as node ON node.vid = T1.vid " .
    "JOIN {content_field_expiration_datetime} as expiry ON expiry.vid = T1.vid and expiry.field_expiration_datetime_value IS NULL " .
    "JOIN {content_type_section_access_option} as T2 " .
    "ON T1.field_section_access_option_nid = T2.nid " .
    "JOIN {content_type_app_section} as T3 on T3.nid = T2.field_app_section_nid " .
    "JOIN {content_type_access_option} as T4 " .
    "ON T4.nid = T2.field_access_option_nid where T1.field_app_role_nid = '%s'";
  return db_query($query, $nid);
}

function getProductlinefrmRoleQuery($nid) {
  $query = "select {field_role_product_line_nid} " .
    "FROM {content_type_roles} WHERE nid = '%s'";
  return db_result(db_query($query, $nid));
}

function getNodeDetails($name, $type) {
  $query = "select * from {node} where title='%s' and type='%s'";
  return db_result(db_query($query, $name, $type));
}

function updateUserPasswordQuery($md5, $uid) {
  return db_query("Update {users} set pass = '%s' where uid = '%s'", $md5, $uid);
}

function updateUserPasswordExpQuery($dateSQL, $nid) {
  $query = "Update {content_type_person} " .
    "SET field_password_expiration_date_value = '%s' where nid = '%s'";
  return db_query($query, $dateSQL, $nid);
}

function updateUserLangQuery($lang, $nid) {
  $query = "Update {content_field_user_language} " .
    "SET field_user_language_nid = '%s' WHERE nid = '%s'";
  db_query($query, $lang, $nid);
}

function checkUserCountQuery($uid, $md5) {
  $query = "select uid from {users} where uid = '%s' and pass='%s'";
  return db_result(db_query($query, $uid, $md5));
}

function checkRoleCountQuery($title, $nid, $role_pl) {
  $query = "select T1.nid from {node} as T1 " .
    "JOIN {content_type_roles} as T2 on T1.nid = T2.nid " .
    "JOIN {content_field_expiration_datetime} as T3 on T1.nid = T3.nid " .
    "WHERE T1.title = '%s' and T1.type = 'roles' and T1.nid != '%s' " .
    "AND T3.field_expiration_datetime_value IS NULL " .
    "and T2.field_role_product_line_nid = '%s'";
  return db_result(db_query($query, $title, $nid, $role_pl));
}

function checkDuplicateTrainingQuery($trainee, $trainer, $device_type, $nid, $date) {
  $sql = "SELECT T1.nid 
					FROM {content_type_person_training_record} T1 
					JOIN {content_field_device_type} T2 ON T1.nid = T2.nid 
					WHERE T1.field_trainee_id_nid = %d 
					AND T1.field_trainer_id_nid = %d 
					AND T2.field_device_type_nid = %d 
					AND T1.field_training_completion_date_value='%s' ";
  $args = array($trainee, $trainer, $device_type, $date);
  if ($nid) {
    $sql .= " AND T1.nid != %d ";
    $args[] = $nid;
  }
  return db_result(db_query($sql, $args));
}

function getUserEmailexistQuery($name, $uid, $select) {
  $query = "select " . $select . " from {users} where name = '%s' and uid !='%s'";
  return db_result(db_query($query, $name, $uid));
}

function deleteUsersRolesQuery($uid) {
  db_query("Delete from {users_roles} where uid = '%s'", $uid);
}

function insertUsersRolesQuery($key, $uid) {
  db_query("insert into {users_roles} (rid, uid) values ('%s', '%s')", $key, $uid);
}

function getAllPersonRolenidQuery($nid) {
  $query = "SELECT T1.nid FROM " .
    "{content_type_person_application_role} as T1 " .
    "JOIN {content_field_person_pk} as T2 on T1.vid = T2.vid " .
    "JOIN {node} as T3 on T1.vid = T3.vid " .
    "WHERE T2.field_person_pk_nid='%s'";
  return db_query($query, $nid);
}

function getAllPersonPrivilegenidQuery($nid) {
  $query = "SELECT T1.nid " .
    "FROM {content_type_device_user_privileges} as T1 " .
    "JOIN {content_field_expiration_datetime} as expiry on T1.vid = expiry.vid " .
    "AND field_expiration_datetime_value IS NULL " .
    "JOIN {content_field_person_pk} as T2 on T1.vid = T2.vid " .
    "JOIN {node} as T3 on T1.vid = T3.vid " .
    "WHERE T2.field_person_pk_nid = '%s'";
  return db_query($query, $nid);
}

function updateUserDetailsQuery($node, $first, $last, $bid, $comp, $acc, $name, $lid, $country, $employee) {
  $time = time();
  $query = "Update {users} set name = '%s', mail = '%s', init = '%s' where uid = '%s'";
  db_query($query, $name, $name, $name, $node->uid);

  $query = "Update {content_type_person} " .
    "SET field_first_name_value = '%s', " .
    "field_last_name_value = '%s', " .
    "field_business_unit_nid = '%s', " .
    "field_company_name_nid = '%s', " .
    "field_comp_account_no_nid = '%s', " .
    "field_covidien_employee_value = '%s', " .
    "field_person_username_value = '%s' " .
    "WHERE nid = '%s'";
  db_query($query, $first, $last, $bid, $comp, $acc, $employee, $name, $node->nid);

  $query = "Update {node} set title = '%s', changed = '%s' " .
    "WHERE title = '%s' and (" .
    "type='person' OR type='party' " .
    "OR type='party_email_address' " .
    "OR type='user_settings' OR type='person_application_role' " .
    "OR type='device_user_privileges')";

  db_query($query, $name, $time, $node->name);
  $query = "Update {content_field_user_language} " .
    "SET field_user_language_nid = '%s' where nid = '%s'";
  db_query($query, $lid, $node->nid);
  $query = "select nid from {content_field_device_avail_country} where nid = '%s'";
  $country_nid = db_result(db_query($query, $node->nid));

  if (empty($country_nid)) {
    $query = "Insert into {content_field_device_avail_country} " .
      "(nid,vid, field_device_avail_country_nid) values ('%s','%s','%s')";
    db_query($query, $node->nid, $node->vid, $country);
  } else {
    $query = "Update {content_field_device_avail_country} " .
      "SET field_device_avail_country_nid = '%s' where nid = '%s'";
    db_query($query, $country, $node->nid);
  }
}

function getLoginTrackQuery($email) {
  $query = "select count(*) as tot from {login_security_track} where name = '%s'";
  return db_result(db_query($query, $email));
}

function getAccessSectionsQuery() {
  $query = "Select nid,field_section_name_value, " .
    "field_parent_access_section_nid, " .
    "field_app_section_description_value " .
    "FROM {content_type_app_section} " .
    "WHERE field_parent_access_section_nid IS NULL and field_ipermit_class_value != 1 " .
    "order by field_app_section_sort_sequence_value asc";
  return db_query($query);
}

function getChildAccessSections($nid) {
  $query = "Select nid,field_section_name_value, " .
    "field_parent_access_section_nid " .
    "FROM {content_type_app_section} " .
    "WHERE field_parent_access_section_nid = '%s' " .
    "ORDER BY field_app_section_sort_sequence_value asc";
  return db_query($query, $nid);
}

function getAccessOptionQuery($nid) {
  $query = "Select T1.nid,T2.field_access_option_name_value " .
    "FROM  {content_type_section_access_option} as T1 " .
    "LEFT JOIN {content_type_access_option} as T2 on T1.field_access_option_nid = T2.nid " .
    "WHERE T1.field_app_section_nid = '%s'";
  return db_query($query, $nid);
}

function getSelectedAccessOptionQuery($nid, $role) {
  $query = "Select T2.field_section_access_option_nid " .
    "FROM {content_type_section_access_option} as T1 " .
    "LEFT JOIN {content_type_app_role_access_policy} as T2 " .
    "on T1.field_app_section_nid = '%s' " .
    "INNER JOIN {content_field_expiration_datetime} as T3 on T2.vid = T3.vid and field_expiration_datetime_value IS NULL " .
    "WHERE T1.nid = T2.field_section_access_option_nid and T2.field_app_role_nid = '%s'";
  return db_result(db_query($query, $nid, $role));
}

function getAccessPolicyQuery($role) {
  $query = "Select T2.nid from {content_type_app_role_access_policy} as T1 " .
    "JOIN {node} as T2 on T1.vid = T2.vid " .
    "JOIN {content_field_expiration_datetime} as T3 on T1.vid = T3.vid " .
    "AND T3.field_expiration_datetime_value IS NULL " .
    "WHERE field_app_role_nid = '%s'";
  return db_query($query, $role);
}

function getProductlineRoleQuery($nid) {
  $query = "SELECT T2.title " .
    "FROM  {content_type_roles} as T1 " .
    "JOIN {node} as T2 on T1.field_role_product_line_nid = T2.nid where T1.nid = '%s'";
  return db_result(db_query($query, $nid));
}

function getRoleProductLineQuery() {
  $query = "select T1.nid,T1.title " .
    "FROM {node} as T1 join {content_type_roles} as T2 " .
    "ON T1.nid = T2.field_role_product_line_nid " .
    "WHERE T1.type='product_line'";
  return $product_line = db_query($query);
}

function getRoleDetailsQuery($role) {
  $query = "Select T1.title, T2.field_roles_description_value, " .
    "T2.field_role_product_line_nid from {node} as T1 " .
    "INNER JOIN {content_type_roles} as T2 on T1.nid = T2.nid " .
    "WHERE T1.nid = '%s'";
  return db_query($query, $role);
}

function blockUserQuery($uid, $name) {
  db_query("Update users set status='1' where uid = '%s'", $uid);
  db_query("Update {content_type_person} set field_login_failure_count_value='0' where field_person_username_value = '%s'", $name);
  clear_login_security_table($name);
}

function clear_login_security_table($name, $limit = '') {
  $limit_qry = '';
  if ($limit == 1) {
    $limit_qry = ' LIMIT 1';
  }
  db_query("delete from {login_security_track} where name = '%s' $limit_qry", $name);
}

function clear_logsectable_activate($name) {
  clear_login_security_table($name, '1');
  db_query("UPDATE {users} SET status = 1 WHERE name = %d", $name);
}

function getDevicesonPLQuery($product_line) {
  $query = "select node1.nid as devicetype_nid,node1.title as device_type " .
    "FROM {node} join {content_field_device_product_line} " .
    "ON content_field_device_product_line.field_device_product_line_nid=node.nid " .
    "JOIN {content_type_devicetype} " .
    "on content_type_devicetype.nid=content_field_device_product_line.nid " .
    "AND content_field_device_product_line.vid=content_type_devicetype.vid " .
    "JOIN {node} as node1 on node1.nid=content_type_devicetype.nid " .
    "AND node1.vid=content_type_devicetype.vid WHERE node.nid='%d'";
  return db_query($query, $product_line);
}

function getUsersAllPrevilegeQuery($nid) {
  $query = "select T5.title,T11.field_max_download_level_value " .
    "FROM {content_type_person_application_role} as T1 " .
    "JOIN {content_field_max_download_level} as T11 on T1.nid = T11.nid " .
    "JOIN {content_field_person_pk} as T2 on T1.nid = T2.nid " .
    "JOIN {content_field_app_role_pk} as T3 on T1.nid = T3.nid " .
    "JOIN {content_type_roles} as T4 on T3.field_app_role_pk_nid = T4.nid " .
    "JOIN {node} as T5 on T5.nid = T4.field_role_product_line_nid " .
    "WHERE T2.field_person_pk_nid = '%s'";
  return db_query($query, $nid);
}

function getTitleUserAccessOptionQuery($role_access_value) {
  $query = "select node.title " .
    "FROM {content_type_section_access_option} as T1 " .
    "JOIN {node} as node on node.nid = T1.field_access_option_nid " .
    "WHERE T1.nid = '%s'";
  return db_result(db_query($query, $role_access_value));
}

function getDevicetypePLQuery($val) {
  $query = "select field_device_product_line_nid " .
    "FROM {content_type_devicetype} as T1 " .
    "JOIN {content_field_device_product_line} as T2 on T1.vid = T2.vid " .
    "WHERE T1.nid = '%s'";
  return $device_pl = db_result(db_query($query, $val));
}

function getCIDCustomerNameQuery($customer_name) {
  $query = "select T2.nid as customer 
  FROM content_type_bu_customer as T1 
  JOIN node as T2 ON T1.field_customer_party_pk_nid = T2.nid 
	LEFT JOIN content_field_expiration_datetime as expiry ON expiry.vid = T2.vid 
  WHERE T2.title='%s' AND expiry.field_expiration_datetime_value is NULL ";
  return db_result(db_query($query, $customer_name));
}

function getBUCustomerIDQuery($customer_name, $customer_account) {
  $query = "select T1.field_customer_party_pk_nid as cid 
  FROM content_type_bu_customer as T1 
  JOIN node as T2 on T1.vid = T2.vid 
  JOIN node as customer on customer.nid = T1.field_customer_party_pk_nid 
  WHERE T1.field_bu_customer_account_number_value = '%s' and customer.title = '%s'";
  return db_result(db_query($query, $customer_account, $customer_name));
}

function getAccountIDQuery($customer_account) {
  $query = "select T1.nid as account 
  FROM {content_type_bu_customer} as T1 
	JOIN {node} as bucustomer on bucustomer.vid = T1.vid 
  JOIN {node} as T2 ON T1.field_customer_party_pk_nid = T2.nid 
  LEFT JOIN {content_field_expiration_datetime} as expiry ON expiry.vid = T1.vid
  WHERE T1.field_bu_customer_account_number_value = '%s' AND expiry.field_expiration_datetime_value is NULL ";
  return db_result(db_query($query, $customer_account));
}

function is_valid_trainer($device_id, $person_id) {
  $query = "SELECT * FROM node n
    JOIN {content_type_device_user_privileges} dup ON n.vid = dup.vid
    LEFT JOIN {content_type_section_access_option} sao ON dup.field_user_section_access_nid = sao.vid
    LEFT JOIN {node} aon ON sao.field_access_option_nid = aon.nid
    LEFT JOIN {content_field_device_type} fdt ON n.vid = fdt.vid
    LEFT JOIN {content_field_person_pk} pp ON n.vid = pp.vid
    WHERE n.type = 'device_user_privileges' AND aon.title = 'yes' AND fdt.field_device_type_nid = %d 
    AND pp.field_person_pk_nid = %d";
  return db_result(db_query($query, $device_id, $person_id));
}

function getUserbasedDevicesQuery($user, $uid, $userid) {
  if ($user != 1) {
    $where = " where T2.field_person_pk_nid = '%s'";
    $qry_arg[] = $userid;
  }
  $query = "select T8.nid, T8.title " .
    "FROM {content_type_person_application_role} as T1 " .
    "JOIN {content_field_person_pk} as T2 on T1.nid = T2.nid " .
    "JOIN {content_field_app_role_pk} as T3 on T1.nid = T3.nid " .
    "JOIN {content_type_roles} as T4 on T3.field_app_role_pk_nid = T4.nid " .
    "JOIN {content_type_product_line} as T5 on T5.nid = T4.field_role_product_line_nid " .
    "JOIN {content_field_device_product_line} as T6 " .
    "ON T6.field_device_product_line_nid = T5.nid " .
    "JOIN {content_type_devicetype} as T7 on T7.nid = T6.nid " .
    "JOIN {node} as T8 on T8.nid = T7.nid ";
  return db_query($query . $where, $qry_arg);
}

function getAccessSectionsTrainerQuery() {
  $query = "Select nid,field_section_name_value, " .
    "field_parent_access_section_nid " .
    "FROM {content_type_app_section} " .
    "WHERE field_parent_access_section_nid IS NULL " .
    "AND field_ipermit_class_value = 1 " .
    "order by field_app_section_sort_sequence_value asc";
  return db_query($query);
}

function getUsersSelectedDeviceQuery($edit_nid) {
  $query = "select T4.field_app_section_nid, " .
    "T3.field_device_type_nid, T1.field_user_section_access_nid " .
    "FROM {content_type_device_user_privileges} as T1 " .
    "JOIN {content_field_expiration_datetime} as expiry on T1.nid = expiry.nid " .
    "AND field_expiration_datetime_value IS NULL " .
    "JOIN {content_field_person_pk} as T2 on T1.nid = T2.nid " .
    "JOIN {content_field_device_type} as T3 on T1.nid = T3.nid " .
    "JOIN {content_type_section_access_option} as T4 " .
    "ON T1.field_user_section_access_nid = T4.nid " .
    "WHERE T2.field_person_pk_nid = '%s'";
  return db_query($query, $edit_nid);
}

function getnodearray($type) {
  $matches = array('' => '');
  $result = db_query("select nid,title FROM {node} WHERE type = '%s'", $type);
  while ($row = db_fetch_object($result)) {
    $matches[$row->title] = $row->title;
  }
  return $matches;
}

function getbusinessunitarray() {
  $matches = array('' => '');
  $result = db_query("SELECT DISTINCT(node.nid) AS nid, node.title AS node_title FROM node node 
 LEFT JOIN content_type_party node_data_field_party_type ON node.vid = node_data_field_party_type.vid
 LEFT JOIN node node_node_data_field_party_type ON node_data_field_party_type.field_party_type_nid = node_node_data_field_party_type.nid
 LEFT JOIN content_type_product_line node2 ON node.nid = node2.field_product_line_bu_party_nid
 LEFT JOIN node node_node ON node2.nid = node_node.nid
 WHERE (node_node_data_field_party_type.title) = ('Business Unit')
 GROUP BY nid");
  while ($row = db_fetch_object($result)) {
    $matches[$row->node_title] = $row->node_title;
  }
  return $matches;
}

function insertnewuserrequest($xml, $email) {
  db_query("INSERT INTO {new_user_request} (xml,request_status,status_change_date,requested_user,request_date) VALUES ('%s',%d,NOW(),'%s',NOW())", $xml, 0, $email);
}

function finduserexists($name) {
  return db_result(db_query("select uid from {users} where name = '%s' || mail = '%s'", $name, $name));
}

function checkuserstatus($name) {
  $query = db_query("select users.status as status, person.field_is_active_user_value as active, users.uid, node.nid from {users} users join {node} node on users.name = node.title join {content_type_person} person on node.vid = person.vid where node.type = 'person' and node.title = '%s'", $name);
  return db_fetch_array($query);
}

function updateforgotstatus($email) {
  global $base_url;
  $nid = db_result(db_query("Select nid from {node} where type = 'person' and title = '%s'", $email));
  $rand = getrandompassword();
  $time = time();
  $random_pass = md5($rand . $time);
  $drupaltime = format_date($time, 'custom', 'Y-m-d H:i:s');
  $nid = db_query("Update {content_type_person} set field_password_reset_hash_value = '%s', field_forgotpass_req_date_value = '%s' where nid = '%s'", $random_pass, $drupaltime, $nid);
  $link = $base_url . '/covidien/reset_password/' . $random_pass;
  return $link;
}

function resetforgetstatus($nid) {
  db_query("Update {content_type_person} set field_password_reset_hash_value = '', field_forgotpass_req_date_value = '' where nid = '%s'", $nid);
}

function usrdetailpasshash($v) {
  $query = db_query("Select users.uid, node.nid, node.vid from {node} node join {content_type_person} person on person.vid = node.vid join {users} users on node.title = users.name where person.field_password_reset_hash_value = '%s'", $v);
  $val = db_fetch_object($query);
  return $val;
}

function getuserdetail($email) {
  $val = db_query("select CONCAT(person.field_first_name_value,' ',person.field_last_name_value) as name, users.uid from {content_type_person} person join {node} node on node.vid = person.vid join {users} users on users.name = node.title where node.title = '%s' and node.type = 'person'", $email);
  return db_fetch_object($val);
}

function getuserprofiledetails($email) {
  $query = db_query("SELECT country.title as country_title, business_unit.title as bunit_title, customer.title as customer_title, language.title as language_title, person2.field_first_name_value AS firstname, node.type AS node_type, node.nid as person_nid, node.vid AS node_vid, person2.field_last_name_value AS lastname, person2.field_business_unit_nid AS node_data_field_first_name_field_business_unit_nid, person2.field_company_name_nid AS node_data_field_first_name_field_company_name_nid, account_number_node.field_bu_customer_account_number_value AS account_number_value, bu_customer_node.nid AS node_node_data_field_comp_account_no_nid, person2.field_covidien_employee_value AS employee, country_node.field_device_avail_country_nid AS country_nid, language_node.field_user_language_nid AS language_nid FROM node node LEFT JOIN content_type_person person ON node.vid = person.vid LEFT JOIN node bu_customer_node ON person.field_comp_account_no_nid = bu_customer_node.nid LEFT JOIN content_type_person person2 ON node.vid = person2.vid LEFT JOIN content_type_bu_customer account_number_node ON bu_customer_node.vid = account_number_node.vid LEFT JOIN content_field_device_avail_country country_node ON node.vid = country_node.vid LEFT JOIN content_field_user_language language_node ON node.vid = language_node.vid LEFT JOIN node country on country.nid =  country_node.field_device_avail_country_nid LEFT JOIN node language on language.nid = language_node.field_user_language_nid LEFT JOIN node customer on customer.nid = person2.field_company_name_nid LEFT JOIN node business_unit on business_unit.nid = person2.field_business_unit_nid WHERE node.type in ('person') and node.title = '%s'", $email);
  $val = db_fetch_object($query);
  return $val;
}

function getnotificationlistquery() {
  $query = db_query("select node.title as title, node.nid as nid from node node join content_field_expiration_datetime expire on expire.vid = node.vid where node.type = 'device_notification_type' and expire.field_expiration_datetime_value is NULL ORDER BY node.title ASC");
  return $query;
}

function getusernotification($uid) {
  $query = db_query("Select notify_type.field_device_notification_type_nid as n_type from {node} node join {content_type_person} person on person.vid = node.vid join {users} users on node.title = users.name join {content_type_device_notification_subscription} notification on person.nid = notification.field_person_nid join {content_field_device_notification_type} notify_type on notify_type.vid = notification.vid where users.uid = '%s'", $uid);
  $arr = array();
  while ($row = db_fetch_object($query)) {
    $arr[] = $row->n_type;
  }
  return $arr;
}

function getrolesdetailsformail($nid) {
  $arr = array();
  $query = db_query("SELECT node.nid AS nid, role_node.title as role_title, pl_node.title as pl_title, node_data_field_max_download_level.field_max_download_level_value AS download_level, person_app_role.field_person_role_default_value AS default_value FROM node node   LEFT JOIN content_field_app_role_pk node_data_field_app_role_pk ON node.vid = node_data_field_app_role_pk.vid  LEFT JOIN node role_node ON node_data_field_app_role_pk.field_app_role_pk_nid = role_node.nid  LEFT JOIN content_field_person_pk node_data_field_person_pk ON node.vid = node_data_field_person_pk.vid  LEFT JOIN content_field_max_download_level node_data_field_max_download_level ON node.vid = node_data_field_max_download_level.vid  LEFT JOIN content_type_person_application_role person_app_role ON node.vid = person_app_role.vid  LEFT JOIN content_type_roles role_cck ON role_node.vid = role_cck.vid LEFT JOIN node pl_node ON pl_node.nid = role_cck.field_role_product_line_nid  WHERE (node.type in ('person_application_role')) AND (node_data_field_person_pk.field_person_pk_nid = '%s') GROUP BY pl_node.nid", $nid);
  while ($row = db_fetch_object($query)) {
    $arr[$row->nid] = array(
      'pl' => $row->pl_title,
      'role' => $row->role_title,
      'default' => $row->default_value,
      'privilege' => $row->download_level,
    );
  }
  return $arr;
}

function getdeviceprivilegemail($nid) {
  $arr = array();
  $query = db_query("SELECT node.nid AS nid, app_section_node.title AS section_title, access_option_node.title AS option_title, device_node.title AS device_type_title  FROM node node   LEFT JOIN {content_type_device_user_privileges} user_privileges_table ON node.vid = user_privileges_table.vid JOIN {content_field_expiration_datetime} expiry on expiry.vid = node.vid and field_expiration_datetime_value IS NULL LEFT JOIN node section_access_node ON user_privileges_table.field_user_section_access_nid = section_access_node.nid  LEFT JOIN content_type_section_access_option section_access_option_tbl1 ON section_access_node.vid = section_access_option_tbl1.vid  LEFT JOIN node app_section_node ON section_access_option_tbl1.field_app_section_nid = app_section_node.nid  LEFT JOIN content_type_section_access_option section_access_option_tbl2 ON section_access_node.vid = section_access_option_tbl2.vid  LEFT JOIN node access_option_node ON section_access_option_tbl2.field_access_option_nid = access_option_node.nid  LEFT JOIN content_field_device_type device_type ON node.vid = device_type.vid  LEFT JOIN node device_node ON device_type.field_device_type_nid = device_node.nid  LEFT JOIN content_field_person_pk person_pk ON node.vid = person_pk.vid  WHERE (node.type in ('device_user_privileges')) AND (person_pk.field_person_pk_nid = '%s' )", $nid);
  while ($row = db_fetch_object($query)) {
    $arr[$row->nid] = array(
      'section' => $row->section_title,
      'option' => $row->option_title,
      'device_type' => $row->device_type_title,
    );
  }
  return $arr;
}

function user_is_deactivated($email) {
  $query = db_result(db_query("Select person.field_is_active_user_value from {node} node join {content_type_person} person on person.vid = node.vid join {users} users on node.title = users.name where node.title = '%s'", $email));
  return $query;
}

function userupdateactivatestatus($nid, $vid, $status) {
  $query = db_query("UPDATE {content_type_person} set field_is_active_user_value = '%s' where nid = '%d' and vid = '%d'", $status, $nid, $vid);
  return $query;
}

function getTraineraccessforDevice($trainer, $device) {
  $result = db_result(db_query("select T5.title from {node} as node JOIN {content_type_device_user_privileges} as T1 on node.vid = T1.vid JOIN {content_field_expiration_datetime} as expiry on expiry.vid = node.vid and field_expiration_datetime_value IS NULL join {content_field_device_type} as T2 on T1.nid = T2.nid join {content_field_person_pk} as T3 on T1.nid = T3.nid join {content_type_section_access_option} as T4 on T1.field_user_section_access_nid = T4.nid join {node} as T5 on T4.field_access_option_nid = T5.nid where T3.field_person_pk_nid = '%s' and T2.field_device_type_nid = '%s'", $trainer, $device));
  return $result;
}
