<?php

/**
 * hook_menu
 */
function covidien_customer_menu() {
  $items = array();
  $items['covidien/customer/add'] = array(
    'title' => t('Add New Customer'),
    'description' => t('Add new customer.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('covidien_customer_form'),
    'access callback' => 'covidien_customer_check_access',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['covidien/customer/edit/%'] = array(
    'title' => t('Edit Customer'),
    'description' => t('Edit customer.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('covidien_customer_form', 3),
    'access callback' => 'covidien_customer_check_access',
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implement hook_check_access(), to block unauthorized users.
 */
function covidien_customer_check_access() {
  return covidien_cot_admin_access_callback('users');
}

/**
 * hook_form
 */
function covidien_customer_form($form) {
  drupal_add_js(drupal_get_path('module', 'covidien_users') . '/js/newjquery.min.js');
  drupal_add_js(drupal_get_path('module', 'covidien_users') . '/js/jquery.colorbox-min.js');
  drupal_add_js(drupal_get_path('module', 'covidien_users') . '/js/jquery-ui.min.js');
  drupal_add_css(drupal_get_path('module', 'covidien_users') . '/css/colorbox.css');
  $form = array();
  $form['customer_name'] = array(
    '#type' => 'textfield',
    '#id' => 'covidien_customer_name',
    '#required' => TRUE,
    '#title' => t('Customer Name'),
  );
  $form['customer_account_number'] = array(
    '#type' => 'textfield',
    '#id' => 'covidien_customer_account_number',
    '#required' => TRUE,
    '#title' => t('Customer Account Number'),
  );
  $form['business_unit'] = array(
    '#type' => 'select',
    '#id' => 'business_unit',
    '#title' => t('Business Unit'),
    '#options' => get_party_on_type('Business Unit'),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );
  $form['cancel'] = array(
    '#type' => 'button',
    '#value' => t('Cancel'),
    '#id' => 'secondary_submit',
    '#attributes' => array('onclick' => 'parent.jQuery.fn.colorbox.close();return false;', 'style' => 'float: right;margin-right: 20px;'),
  );
  return $form;
}

/**
 * hook_form_validate
 */
function covidien_customer_form_validate(&$form, &$form_state) {
  //customer_name
  if (empty($form_state['values']['customer_name'])) {
    form_set_error('customer_name', t('Invalid Customer Name'));
  } else {
    if (get_customer_name_nid($form_state['values']['customer_name'])) {
      form_set_error('customer_name', t('Customer Name already exists'));
    }
  }
  //customer_account_number
  if (empty($form_state['values']['customer_account_number'])) {
    form_set_error('customer_account_number', t('Invalid Customer Account Number'));
  } else {
    if (get_customer_account_number_nid($form_state['values']['customer_account_number'])) {
      form_set_error('customer_account_number', t('Customer Account Number already exists'));
    }
  }
}

/**
 * hook_form_submit
 */
function covidien_customer_form_submit(&$form, &$form_state) {
  $customer_type_id = get_party_type_id('Customer');
  //save customer name 
  $customer_node = new stdClass();
  $customer_node->type = 'party';
  $customer_node->uid = 1;
  $customer_node->format = 0;
  $customer_node->title = $form_state['values']['customer_name']; //Customer name
  $customer_node->field_party_type[0]['nid'] = $customer_type_id; //party is Customer nid
  node_save($customer_node);
  //save customer account number
  $node = new stdClass();
  $node->type = 'bu_customer';
  $node->uid = 1;
  $node->format = 0;
  $node->title = $form_state['values']['customer_account_number']; //Customer Account number
  $node->field_bu_customer_account_number[0]['value'] = $form_state['values']['customer_account_number']; //Customer Account number
  $node->field_customer_party_pk[0]['nid'] = $customer_node->nid; //Customer name nid
  $node->field_bu_party_pk[0]['nid'] = $form_state['values']['business_unit']; //Business Unit
  node_save($node);
  drupal_set_message(t('Created new Customer succesfully.'));

  global $base_url;
  echo '<script type="text/javascript">parent.jQuery.fn.colorbox.close();</script>';
  exit;
}

function get_party_on_type($party_type) {
  $query = "SELECT n.nid, n.title FROM node n 
			JOIN content_type_party p ON p.nid = n.nid 
			JOIN node pt ON p.field_party_type_nid = pt.nid
			WHERE n.type='%s' AND pt.title = '%s'";
  $result = db_query($query, 'party', $party_type);
  $rows[] = t('- None -');
  while ($row = db_fetch_object($result)) {
    $rows[$row->nid] = $row->title;
  }
  return $rows;
}

function get_party_type_id($customer_type) {
  $query = "SELECT nid FROM node WHERE type='party_type' AND title='%s'";
  $result = db_query($query, $customer_type);
  return db_result($result);
}

function get_customer_name_nid($customer_name) {
  $query = "SELECT nid FROM node WHERE type='party' AND title='%s'";
  $result = db_query($query, $customer_name);
  return db_result($result);
}

function get_customer_account_number_nid($customer_account_number) {
  $query = "SELECT nid FROM node WHERE type = 'bu_customer' AND title='%s'";
  $result = db_query($query, $customer_account_number);
  return db_result($result);
}
